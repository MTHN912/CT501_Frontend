{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      partyPackages: [],\n      // Gói tiệc sẽ được lấy từ API\n      selectedCategory: \"\",\n      // Danh mục tiệc đang chọn\n      selectedPackage: null,\n      purchaseStatus: \"\",\n      categories: [],\n      // Danh mục tiệc sẽ được lấy từ API\n      isLoading: true,\n      // Trạng thái đang tải dữ liệu\n      isLoggedIn: false\n    };\n  },\n  computed: {\n    // Lọc các gói tiệc dựa trên danh mục đã chọn\n    filteredPackages() {\n      if (!this.selectedCategory) {\n        return this.partyPackages;\n      }\n      return this.partyPackages.filter(pkg => pkg.category === this.selectedCategory);\n    }\n  },\n  methods: {\n    handleBooking() {\n      if (!this.isLoggedIn) {\n        // Hiển thị thông báo\n        alert(\"Bạn chưa đăng nhập\");\n\n        // Chuyển hướng đến trang login\n        this.$router.push(\"/login\");\n      } else {\n        // Nếu đã đăng nhập, tiếp tục quá trình đặt tiệc\n        // Thêm logic đặt tiệc tại đây\n        console.log(\"Đang tiến hành đặt tiệc...\");\n      }\n    },\n    // Lấy danh mục tiệc từ API\n    async fetchCategories() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/categorypackage/getCategoryPackage\");\n        this.categories = response.data.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh mục:\", error);\n      }\n    },\n    // Lấy danh sách gói tiệc từ API\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/package/getPackage\");\n        this.partyPackages = response.data.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy gói tiệc:\", error);\n      } finally {\n        this.isLoading = false; // Tắt trạng thái đang tải khi dữ liệu đã được tải xong\n      }\n    },\n    // Lấy chi tiết gói tiệc từ API\n    async fetchPackageDetails(packageId) {\n      try {\n        const response = await fetch(`http://localhost:3000/package/getPackageById/${packageId}`);\n        const data = await response.json();\n        if (data.success) {\n          this.selectedPackage = data.data;\n          // this.numTables = this.selectedPackage.tables + 1;\n          this.$nextTick(() => {\n            const packageDetails = this.$refs.packageDetails;\n            if (packageDetails) {\n              packageDetails.scrollIntoView({\n                behavior: \"smooth\"\n              });\n            }\n          });\n        } else {\n          console.error(\"Lỗi khi lấy chi tiết gói tiệc:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Lỗi kết nối khi lấy chi tiết gói tiệc:\", error);\n      }\n    },\n    // Đặt mua gói tiệc\n    async purchasePackage() {\n      if (!this.selectedPackage || this.numTables <= this.selectedPackage.tables) {\n        alert(`Số lượng bàn phải lớn hơn ${this.selectedPackage.tables}`);\n        return;\n      }\n      try {\n        const response = await this.fakeApiCall({\n          package: this.selectedPackage\n        });\n        if (response.success) {\n          this.purchaseStatus = `Bạn đã đặt thành công gói tiệc ${this.selectedPackage.name}`;\n        } else {\n          this.purchaseStatus = `Đặt gói tiệc ${this.selectedPackage.name} thất bại.`;\n        }\n      } catch (error) {\n        this.purchaseStatus = \"Có lỗi xảy ra, vui lòng thử lại.\";\n      }\n    },\n    // Đóng phần chi tiết gói tiệc và cuộn về đầu trang\n    closePackageDetails() {\n      this.selectedPackage = null;\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      }); // Cuộn về đầu trang\n    },\n    // Giả lập API call\n    fakeApiCall(pkg) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            success: true\n          });\n        }, 1000);\n      });\n    }\n  },\n  // Lấy dữ liệu khi component được tạo\n  created() {\n    this.fetchCategories();\n    this.fetchPackages();\n  }\n};","map":{"version":3,"names":["axios","data","partyPackages","selectedCategory","selectedPackage","purchaseStatus","categories","isLoading","isLoggedIn","computed","filteredPackages","filter","pkg","category","methods","handleBooking","alert","$router","push","console","log","fetchCategories","response","get","error","fetchPackages","fetchPackageDetails","packageId","fetch","json","success","$nextTick","packageDetails","$refs","scrollIntoView","behavior","message","purchasePackage","numTables","tables","fakeApiCall","package","name","closePackageDetails","window","scrollTo","top","Promise","resolve","setTimeout","created"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Event\\Event.vue"],"sourcesContent":["<template>\n  <div class=\"party-package\">\n    <h2>Gói Menu Ưu Đãi</h2>\n\n    <!-- Loading danh mục hoặc gói tiệc -->\n    <p v-if=\"isLoading\">Đang tải dữ liệu...</p>\n\n    <!-- Hiển thị danh mục tiệc -->\n    <label for=\"fetchCategories\" v-if=\"!isLoading\">Danh mục Tiệc:</label>\n    <select id=\"fetchCategories\" v-if=\"!isLoading\" v-model=\"selectedCategory\">\n      <option value=\"\">Tất cả</option>\n      <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.name\">\n        {{ cat.name }}\n      </option>\n    </select>\n\n    <!-- Danh sách gói tiệc -->\n    <ul v-if=\"!isLoading\">\n      <li\n        v-for=\"pkg in filteredPackages\"\n        :key=\"pkg.id\"\n        @click=\"fetchPackageDetails(pkg._id)\"\n        :class=\"{ selected: selectedPackage && selectedPackage.id === pkg._id }\"\n      >\n        <img\n          :src=\"pkg.image\"\n          alt=\"Image of {{ pkg.name }}\"\n          class=\"package-image\"\n        />\n        <span>{{ pkg.name }} - {{ pkg.price }} VND</span>\n        <span>Danh mục: {{ pkg.category }}</span>\n        <span>Số bàn: {{ pkg.tables }}</span>\n        <span class=\"promotion\">Ưu đãi: {{ pkg.promotion }}</span>\n      </li>\n    </ul>\n\n    <!-- Hiển thị chi tiết gói tiệc khi được chọn -->\n    <div v-if=\"selectedPackage\" class=\"package-details\" ref=\"packageDetails\">\n      <h3>Gói: {{ selectedPackage.name }}</h3>\n      <p><strong>Giá:</strong> {{ selectedPackage.price }} VND</p>\n      <p><strong>Danh mục:</strong> {{ selectedPackage.category }}</p>\n      <p><strong>Số bàn mặc định:</strong> {{ selectedPackage.tables }}</p>\n      <p><strong>Mô tả:</strong> {{ selectedPackage.description }}</p>\n      <p><strong>Ưu đãi:</strong> {{ selectedPackage.promotion }}</p>\n\n      <h4>Combo món chính:</h4>\n      <ul>\n        <li\n          v-for=\"dish in selectedPackage.combo\"\n          :key=\"dish.name\"\n          class=\"dish-item\"\n        >\n          <img\n            :src=\"dish.image\"\n            alt=\"Image of {{ dish.name }}\"\n            class=\"dish-image\"\n          />\n          <div class=\"dish-info\">\n            <h5>{{ dish.name }}</h5>\n            <p>{{ dish.description }}</p>\n            <p>Số lượng: x{{ dish.quantity }}</p>\n          </div>\n        </li>\n      </ul>\n      <h4>Tráng miệng:</h4>\n      <ul>\n        <li v-for=\"extra in selectedPackage.extraCombo\" :key=\"extra\">\n          {{ extra }}\n        </li>\n      </ul>\n\n      <button @click=\"handleBooking\">Đặt tiệc</button>\n\n      <button class=\"close-btn\" @click=\"closePackageDetails\">Đóng</button>\n    </div>\n\n    <p v-if=\"purchaseStatus\">{{ purchaseStatus }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      partyPackages: [], // Gói tiệc sẽ được lấy từ API\n      selectedCategory: \"\", // Danh mục tiệc đang chọn\n      selectedPackage: null,\n      purchaseStatus: \"\",\n      categories: [], // Danh mục tiệc sẽ được lấy từ API\n      isLoading: true, // Trạng thái đang tải dữ liệu\n      isLoggedIn: false,\n    };\n  },\n  computed: {\n    // Lọc các gói tiệc dựa trên danh mục đã chọn\n    filteredPackages() {\n      if (!this.selectedCategory) {\n        return this.partyPackages;\n      }\n      return this.partyPackages.filter(\n        (pkg) => pkg.category === this.selectedCategory\n      );\n    },\n  },\n  methods: {\n    handleBooking() {\n      if (!this.isLoggedIn) {\n        // Hiển thị thông báo\n        alert(\"Bạn chưa đăng nhập\");\n\n        // Chuyển hướng đến trang login\n        this.$router.push(\"/login\");\n      } else {\n        // Nếu đã đăng nhập, tiếp tục quá trình đặt tiệc\n        // Thêm logic đặt tiệc tại đây\n        console.log(\"Đang tiến hành đặt tiệc...\");\n      }\n    },\n    // Lấy danh mục tiệc từ API\n    async fetchCategories() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:3000/categorypackage/getCategoryPackage\"\n        );\n        this.categories = response.data.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh mục:\", error);\n      }\n    },\n    // Lấy danh sách gói tiệc từ API\n    async fetchPackages() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:3000/package/getPackage\"\n        );\n        this.partyPackages = response.data.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy gói tiệc:\", error);\n      } finally {\n        this.isLoading = false; // Tắt trạng thái đang tải khi dữ liệu đã được tải xong\n      }\n    },\n    // Lấy chi tiết gói tiệc từ API\n    async fetchPackageDetails(packageId) {\n      try {\n        const response = await fetch(\n          `http://localhost:3000/package/getPackageById/${packageId}`\n        );\n        const data = await response.json();\n        if (data.success) {\n          this.selectedPackage = data.data;\n          // this.numTables = this.selectedPackage.tables + 1;\n          this.$nextTick(() => {\n            const packageDetails = this.$refs.packageDetails;\n            if (packageDetails) {\n              packageDetails.scrollIntoView({ behavior: \"smooth\" });\n            }\n          });\n        } else {\n          console.error(\"Lỗi khi lấy chi tiết gói tiệc:\", data.message);\n        }\n      } catch (error) {\n        console.error(\"Lỗi kết nối khi lấy chi tiết gói tiệc:\", error);\n      }\n    },\n    // Đặt mua gói tiệc\n    async purchasePackage() {\n      if (\n        !this.selectedPackage ||\n        this.numTables <= this.selectedPackage.tables\n      ) {\n        alert(`Số lượng bàn phải lớn hơn ${this.selectedPackage.tables}`);\n        return;\n      }\n\n      try {\n        const response = await this.fakeApiCall({\n          package: this.selectedPackage,\n        });\n\n        if (response.success) {\n          this.purchaseStatus = `Bạn đã đặt thành công gói tiệc ${this.selectedPackage.name}`;\n        } else {\n          this.purchaseStatus = `Đặt gói tiệc ${this.selectedPackage.name} thất bại.`;\n        }\n      } catch (error) {\n        this.purchaseStatus = \"Có lỗi xảy ra, vui lòng thử lại.\";\n      }\n    },\n    // Đóng phần chi tiết gói tiệc và cuộn về đầu trang\n    closePackageDetails() {\n      this.selectedPackage = null;\n      window.scrollTo({ top: 0, behavior: \"smooth\" }); // Cuộn về đầu trang\n    },\n    // Giả lập API call\n    fakeApiCall(pkg) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({ success: true });\n        }, 1000);\n      });\n    },\n  },\n  // Lấy dữ liệu khi component được tạo\n  created() {\n    this.fetchCategories();\n    this.fetchPackages();\n  },\n};\n</script>\n\n<style scoped>\n.party-package {\n  padding: 30px 20px;\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n\nh2,\nh3,\nh4 {\n  color: #2c3e50;\n  text-align: center;\n  margin-bottom: 20px; /* Tăng khoảng cách giữa tiêu đề và các phần tử khác */\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(320px, 1fr)\n  ); /* Điều chỉnh kích thước tối thiểu của các card */\n  gap: 30px; /* Tăng khoảng cách giữa các thẻ */\n  margin: 20px 0;\n}\n\nli {\n  padding: 20px;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 15px; /* Tăng độ bo tròn cho các thẻ */\n  background-color: #f9f9f9;\n  transition: all 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1); /* Tăng độ mờ của bóng */\n  text-align: left;\n}\n\nli:hover {\n  background-color: #f0f8ff;\n  transform: scale(1.05); /* Tăng hiệu ứng phóng to khi hover */\n  border-color: #1abc9c;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Tăng độ mờ của bóng khi hover */\n}\n\nli.selected {\n  background-color: #d3f9d8;\n  border-color: #28a745;\n}\n\n.package-image {\n  width: 100%;\n  height: 180px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-bottom: 15px; /* Tạo khoảng cách giữa hình và nội dung */\n}\n\n.package-info {\n  font-size: 18px; /* Tăng kích thước font chữ */\n  color: #2c3e50;\n  margin-bottom: 10px;\n}\n\n.promotion {\n  font-weight: bold;\n  color: #d35400;\n  margin-top: 10px;\n}\n\n.package-details {\n  margin-top: 20px;\n  background-color: #f4f6f9;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  max-width: 800px; /* Giới hạn chiều rộng */\n  margin-left: auto;\n  margin-right: auto;\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 12px 24px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\nbutton:hover {\n  background-color: #218838;\n}\n\n.close-btn {\n  margin-top: 20px;\n  padding: 12px 24px;\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.close-btn:hover {\n  background-color: #c82333;\n}\n\n.promotion {\n  font-weight: bold;\n  color: #d35400;\n}\n\n.package-details-image {\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-bottom: 20px;\n}\n\n.dish-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.dish-image {\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  border-radius: 10px;\n  margin-bottom: 10px;\n}\n\n.dish-info {\n  text-align: center;\n  font-size: 14px;\n}\n\n/* Điều chỉnh khoảng cách và kiểu input */\ninput {\n  padding: 8px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  width: 50%;\n  margin-top: 10px;\n}\n\n/* Sắp xếp lưới món ăn thêm */\nul.extra-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n}\n\nli.extra-item {\n  padding: 10px;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  text-align: center;\n  width: 150px;\n}\n\n/* Canh giữa các phần của trang */\nh3,\nh4,\nh5 {\n  margin-bottom: 10px;\n  font-weight: bold;\n  color: #333;\n}\n\n@media (max-width: 768px) {\n  ul {\n    grid-template-columns: 1fr; /* Đối với màn hình nhỏ, hiển thị 1 cột */\n  }\n}\n</style>\n"],"mappings":"AAiFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MAAE;MACnBC,gBAAgB,EAAE,EAAE;MAAE;MACtBC,eAAe,EAAE,IAAI;MACrBC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MAAE;MAChBC,SAAS,EAAE,IAAI;MAAE;MACjBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACP,gBAAgB,EAAE;QAC1B,OAAO,IAAI,CAACD,aAAa;MAC3B;MACA,OAAO,IAAI,CAACA,aAAa,CAACS,MAAM,CAC7BC,GAAG,IAAKA,GAAG,CAACC,QAAO,KAAM,IAAI,CAACV,gBACjC,CAAC;IACH;EACF,CAAC;EACDW,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACP,UAAU,EAAE;QACpB;QACAQ,KAAK,CAAC,oBAAoB,CAAC;;QAE3B;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,OAAO;QACL;QACA;QACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C;IACF,CAAC;IACD;IACA,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAC9B,0DACF,CAAC;QACD,IAAI,CAACjB,UAAS,GAAIgB,QAAQ,CAACrB,IAAI,CAACA,IAAI;MACtC,EAAE,OAAOuB,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD;IACA,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMH,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAC9B,0CACF,CAAC;QACD,IAAI,CAACrB,aAAY,GAAIoB,QAAQ,CAACrB,IAAI,CAACA,IAAI;MACzC,EAAE,OAAOuB,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACR,IAAI,CAACjB,SAAQ,GAAI,KAAK,EAAE;MAC1B;IACF,CAAC;IACD;IACA,MAAMmB,mBAAmBA,CAACC,SAAS,EAAE;MACnC,IAAI;QACF,MAAML,QAAO,GAAI,MAAMM,KAAK,CAC1B,gDAAgDD,SAAS,EAC3D,CAAC;QACD,MAAM1B,IAAG,GAAI,MAAMqB,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAI5B,IAAI,CAAC6B,OAAO,EAAE;UAChB,IAAI,CAAC1B,eAAc,GAAIH,IAAI,CAACA,IAAI;UAChC;UACA,IAAI,CAAC8B,SAAS,CAAC,MAAM;YACnB,MAAMC,cAAa,GAAI,IAAI,CAACC,KAAK,CAACD,cAAc;YAChD,IAAIA,cAAc,EAAE;cAClBA,cAAc,CAACE,cAAc,CAAC;gBAAEC,QAAQ,EAAE;cAAS,CAAC,CAAC;YACvD;UACF,CAAC,CAAC;QACJ,OAAO;UACLhB,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEvB,IAAI,CAACmC,OAAO,CAAC;QAC/D;MACF,EAAE,OAAOZ,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IACD;IACA,MAAMa,eAAeA,CAAA,EAAG;MACtB,IACE,CAAC,IAAI,CAACjC,eAAc,IACpB,IAAI,CAACkC,SAAQ,IAAK,IAAI,CAAClC,eAAe,CAACmC,MAAK,EAC5C;QACAvB,KAAK,CAAC,6BAA6B,IAAI,CAACZ,eAAe,CAACmC,MAAM,EAAE,CAAC;QACjE;MACF;MAEA,IAAI;QACF,MAAMjB,QAAO,GAAI,MAAM,IAAI,CAACkB,WAAW,CAAC;UACtCC,OAAO,EAAE,IAAI,CAACrC;QAChB,CAAC,CAAC;QAEF,IAAIkB,QAAQ,CAACQ,OAAO,EAAE;UACpB,IAAI,CAACzB,cAAa,GAAI,kCAAkC,IAAI,CAACD,eAAe,CAACsC,IAAI,EAAE;QACrF,OAAO;UACL,IAAI,CAACrC,cAAa,GAAI,gBAAgB,IAAI,CAACD,eAAe,CAACsC,IAAI,YAAY;QAC7E;MACF,EAAE,OAAOlB,KAAK,EAAE;QACd,IAAI,CAACnB,cAAa,GAAI,kCAAkC;MAC1D;IACF,CAAC;IACD;IACAsC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACvC,eAAc,GAAI,IAAI;MAC3BwC,MAAM,CAACC,QAAQ,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEX,QAAQ,EAAE;MAAS,CAAC,CAAC,EAAE;IACnD,CAAC;IACD;IACAK,WAAWA,CAAC5B,GAAG,EAAE;MACf,OAAO,IAAImC,OAAO,CAAEC,OAAO,IAAK;QAC9BC,UAAU,CAAC,MAAM;UACfD,OAAO,CAAC;YAAElB,OAAO,EAAE;UAAK,CAAC,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EACD;EACAoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC7B,eAAe,CAAC,CAAC;IACtB,IAAI,CAACI,aAAa,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}