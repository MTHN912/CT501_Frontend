{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      sortField: \"\",\n      sortOrder: 1,\n      users: [],\n      page: 1,\n      limit: 10,\n      // Giới hạn số user mỗi trang\n      totalPages: 0,\n      tabStatus: \"4\" // Mặc định hiển thị tất cả người dùng\n    };\n  },\n  computed: {\n    filteredUsers() {\n      let filtered = this.users.filter(user => user.USERNAME.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      if (this.sortField) {\n        filtered.sort((a, b) => {\n          let result = 0;\n          if (a[this.sortField] < b[this.sortField]) result = -1;\n          if (a[this.sortField] > b[this.sortField]) result = 1;\n          return result * this.sortOrder;\n        });\n      }\n      return filtered;\n    }\n  },\n  methods: {\n    sortBy(field) {\n      if (this.sortField === field) {\n        this.sortOrder *= -1;\n      } else {\n        this.sortField = field;\n        this.sortOrder = 1;\n      }\n    },\n    changeTab(status) {\n      this.tabStatus = status;\n      this.page = 1; // Reset về trang đầu khi đổi tab\n      this.fetchUsers();\n    },\n    changePage(newPage) {\n      if (newPage > 0 && newPage <= this.totalPages) {\n        this.page = newPage;\n        this.fetchUsers();\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/user/getUsers\", {\n          params: {\n            tabStatus: this.tabStatus,\n            page: this.page,\n            limit: this.limit,\n            search: this.searchQuery\n          }\n        });\n        this.users = response.data.users;\n        this.totalPages = response.data.totalPages;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","sortField","sortOrder","users","page","limit","totalPages","tabStatus","computed","filteredUsers","filtered","filter","user","USERNAME","toLowerCase","includes","sort","a","b","result","methods","sortBy","field","changeTab","status","fetchUsers","changePage","newPage","response","get","params","search","error","console","mounted"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Admin\\User\\AdminUser.vue"],"sourcesContent":["<template>\n  <div class=\"user-management\">\n    <div class=\"header\">\n      <h2>User Management</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search users...\"\n        v-model=\"searchQuery\"\n        class=\"search\"\n        @input=\"fetchUsers\"\n      />\n    </div>\n\n    <!-- Thêm các tab -->\n    <div class=\"tabs\">\n      <button :class=\"{ active: tabStatus === '4' }\" @click=\"changeTab('4')\">\n        Tất Cả\n      </button>\n      <button :class=\"{ active: tabStatus === '2' }\" @click=\"changeTab('2')\">\n        Đã Kích Hoạt\n      </button>\n      <button :class=\"{ active: tabStatus === '1' }\" @click=\"changeTab('1')\">\n        Chưa Kích Hoạt\n      </button>\n    </div>\n\n    <!-- Bảng hiển thị danh sách người dùng -->\n    <table class=\"user-table\" v-if=\"users.length\">\n      <thead>\n        <tr>\n          <th @click=\"sortBy('USERNAME')\">Username ⬍</th>\n          <th @click=\"sortBy('FULLNAME')\">Full Name ⬍</th>\n          <th @click=\"sortBy('EMAIL')\">Email ⬍</th>\n          <th @click=\"sortBy('GENDER')\">Gender ⬍</th>\n          <th @click=\"sortBy('ADDRESS')\">Address ⬍</th>\n          <th @click=\"sortBy('IS_ACTIVATED')\">Activated ⬍</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"user in filteredUsers\" :key=\"user._id\">\n          <td>\n            <img :src=\"user.AVATAR\" alt=\"User avatar\" class=\"user-avatar\" />{{\n              user.USERNAME\n            }}\n          </td>\n          <td>{{ user.FULLNAME }}</td>\n          <td>{{ user.EMAIL }}</td>\n          <td>{{ user.GENDER }}</td>\n          <td>{{ user.ADDRESS }}</td>\n          <td>{{ user.IS_ACTIVATED ? \"Yes\" : \"No\" }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Nút điều hướng trang -->\n    <div class=\"pagination\">\n      <button @click=\"changePage(page - 1)\" :disabled=\"page === 1\">\n        Previous\n      </button>\n      <span>Page {{ page }} of {{ totalPages }}</span>\n      <button @click=\"changePage(page + 1)\" :disabled=\"page === totalPages\">\n        Next\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      sortField: \"\",\n      sortOrder: 1,\n      users: [],\n      page: 1,\n      limit: 10, // Giới hạn số user mỗi trang\n      totalPages: 0,\n      tabStatus: \"4\", // Mặc định hiển thị tất cả người dùng\n    };\n  },\n  computed: {\n    filteredUsers() {\n      let filtered = this.users.filter((user) =>\n        user.USERNAME.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n\n      if (this.sortField) {\n        filtered.sort((a, b) => {\n          let result = 0;\n          if (a[this.sortField] < b[this.sortField]) result = -1;\n          if (a[this.sortField] > b[this.sortField]) result = 1;\n          return result * this.sortOrder;\n        });\n      }\n\n      return filtered;\n    },\n  },\n  methods: {\n    sortBy(field) {\n      if (this.sortField === field) {\n        this.sortOrder *= -1;\n      } else {\n        this.sortField = field;\n        this.sortOrder = 1;\n      }\n    },\n    changeTab(status) {\n      this.tabStatus = status;\n      this.page = 1; // Reset về trang đầu khi đổi tab\n      this.fetchUsers();\n    },\n    changePage(newPage) {\n      if (newPage > 0 && newPage <= this.totalPages) {\n        this.page = newPage;\n        this.fetchUsers();\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\n          \"http://localhost:3000/user/getUsers\",\n          {\n            params: {\n              tabStatus: this.tabStatus,\n              page: this.page,\n              limit: this.limit,\n              search: this.searchQuery,\n            },\n          }\n        );\n        this.users = response.data.users;\n        this.totalPages = response.data.totalPages;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n};\n</script>\n\n<style scoped>\n.user-management {\n  padding: 20px;\n  background-color: #101827;\n  color: #fff;\n  width: 100%;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.search {\n  padding: 10px;\n  background-color: #1d283c;\n  border-radius: 5px;\n  border: none;\n  width: 200px;\n}\n\n.tabs {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.tabs button {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #1d283c;\n  color: #fff;\n}\n\n.tabs button.active {\n  background-color: #0084ff;\n}\n\n.user-table {\n  width: 100%;\n  border-collapse: collapse;\n  text-align: left;\n}\n\n.user-table th,\n.user-table td {\n  padding: 10px;\n  border-bottom: 1px solid #444;\n}\n\n.user-table th {\n  cursor: pointer;\n}\n\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  vertical-align: middle;\n}\n\n/* Phân trang */\n.pagination {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.pagination button {\n  background-color: #0084ff;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.pagination span {\n  color: #fff;\n}\n</style>\n"],"mappings":"AAoEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,CAAC;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MAAE;MACXC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE,GAAG,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,IAAIC,QAAO,GAAI,IAAI,CAACP,KAAK,CAACQ,MAAM,CAAEC,IAAI,IACpCA,IAAI,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACc,WAAW,CAAC,CAAC,CACrE,CAAC;MAED,IAAI,IAAI,CAACb,SAAS,EAAE;QAClBS,QAAQ,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UACtB,IAAIC,MAAK,GAAI,CAAC;UACd,IAAIF,CAAC,CAAC,IAAI,CAAChB,SAAS,IAAIiB,CAAC,CAAC,IAAI,CAACjB,SAAS,CAAC,EAAEkB,MAAK,GAAI,CAAC,CAAC;UACtD,IAAIF,CAAC,CAAC,IAAI,CAAChB,SAAS,IAAIiB,CAAC,CAAC,IAAI,CAACjB,SAAS,CAAC,EAAEkB,MAAK,GAAI,CAAC;UACrD,OAAOA,MAAK,GAAI,IAAI,CAACjB,SAAS;QAChC,CAAC,CAAC;MACJ;MAEA,OAAOQ,QAAQ;IACjB;EACF,CAAC;EACDU,OAAO,EAAE;IACPC,MAAMA,CAACC,KAAK,EAAE;MACZ,IAAI,IAAI,CAACrB,SAAQ,KAAMqB,KAAK,EAAE;QAC5B,IAAI,CAACpB,SAAQ,IAAK,CAAC,CAAC;MACtB,OAAO;QACL,IAAI,CAACD,SAAQ,GAAIqB,KAAK;QACtB,IAAI,CAACpB,SAAQ,GAAI,CAAC;MACpB;IACF,CAAC;IACDqB,SAASA,CAACC,MAAM,EAAE;MAChB,IAAI,CAACjB,SAAQ,GAAIiB,MAAM;MACvB,IAAI,CAACpB,IAAG,GAAI,CAAC,EAAE;MACf,IAAI,CAACqB,UAAU,CAAC,CAAC;IACnB,CAAC;IACDC,UAAUA,CAACC,OAAO,EAAE;MAClB,IAAIA,OAAM,GAAI,KAAKA,OAAM,IAAK,IAAI,CAACrB,UAAU,EAAE;QAC7C,IAAI,CAACF,IAAG,GAAIuB,OAAO;QACnB,IAAI,CAACF,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACD,MAAMA,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAM9B,KAAK,CAAC+B,GAAG,CAC9B,qCAAqC,EACrC;UACEC,MAAM,EAAE;YACNvB,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBH,IAAI,EAAE,IAAI,CAACA,IAAI;YACfC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjB0B,MAAM,EAAE,IAAI,CAAC/B;UACf;QACF,CACF,CAAC;QACD,IAAI,CAACG,KAAI,GAAIyB,QAAQ,CAAC7B,IAAI,CAACI,KAAK;QAChC,IAAI,CAACG,UAAS,GAAIsB,QAAQ,CAAC7B,IAAI,CAACO,UAAU;MAC5C,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}