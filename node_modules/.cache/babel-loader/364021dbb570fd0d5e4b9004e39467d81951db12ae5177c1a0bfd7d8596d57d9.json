{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      averageRating: 0,\n      totalReviews: 0,\n      reviews: [],\n      selectedTab: \"all\",\n      // Mặc định là tab tất cả\n      newRating: 0,\n      hoverRating: 0,\n      newComment: \"\",\n      newImage: null,\n      // Lưu ảnh nếu có\n      hasReviewed: false,\n      // Kiểm tra nếu người dùng đã đánh giá\n      userReview: null,\n      // Thông tin đánh giá của người dùng nếu có\n      successMessage: \"\"\n    };\n  },\n  computed: {\n    // Lọc đánh giá dựa trên tab được chọn\n    filteredReviews() {\n      if (this.selectedTab === \"all\") {\n        return this.reviews;\n      }\n      return this.reviews.filter(review => review.rating === this.selectedTab);\n    },\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn; // Kiểm tra trạng thái đăng nhập\n    }\n  },\n  methods: {\n    // Lấy điểm đánh giá trung bình và tổng số đánh giá từ API\n    async fetchAverageRating(dishId) {\n      try {\n        const response = await axios.get(`http://localhost:3000/review/getAverageRating/${dishId}`);\n        this.averageRating = response.data.average;\n        this.totalReviews = response.data.totalReviews;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy điểm đánh giá trung bình:\", error);\n      }\n    },\n    // Lấy danh sách đánh giá từ API, có thể lọc theo số sao\n    async fetchReviews(dishId) {\n      try {\n        const ratingFilter = this.selectedTab === \"all\" ? \"\" : `?rating=${this.selectedTab}`;\n        const response = await axios.get(`http://localhost:3000/review/getReviews/${dishId}${ratingFilter}`);\n        this.reviews = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách đánh giá:\", error);\n      }\n    },\n    async checkUserReview(dishId) {\n      try {\n        const userId = this.$store.getters.userInfo._id; // Lấy _id từ userInfo\n        const response = await axios.get(`http://localhost:3000/review/checkUserReview/${dishId}`, {\n          params: {\n            userId\n          } // Truyền userId qua request\n        });\n        if (response.data.review) {\n          this.hasReviewed = true;\n          this.userReview = response.data.review; // Lưu đánh giá của người dùng\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra đánh giá của người dùng:\", error);\n      }\n    },\n    // Xử lý upload ảnh\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.newImage = file; // Lưu ảnh để gửi lên server\n    },\n    // Phương thức gửi đánh giá\n    async submitReview() {\n      const dishId = this.$route.params.id;\n\n      // Kiểm tra trạng thái đăng nhập\n      if (!this.isLoggedIn) {\n        alert(\"Bạn cần đăng nhập để đánh giá.\");\n        return;\n      }\n\n      // Kiểm tra nếu thiếu bất kỳ trường bắt buộc nào\n      if (!dishId || !this.newRating || !this.newComment) {\n        alert(\"Vui lòng điền đầy đủ thông tin (số sao và bình luận).\");\n        return;\n      }\n      try {\n        // Gửi request trực tiếp với rating và comment mà không qua reviewData\n        const response = await axios.post(`http://localhost:3000/review/createReview/${dishId}`, {\n          rating: this.newRating,\n          comment: this.newComment\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // Thông báo thành công\n        this.successMessage = \"Đánh giá của bạn đã được gửi thành công.\";\n        setTimeout(() => {\n          this.successMessage = \"\";\n        }, 3000);\n\n        // Reset các trường sau khi gửi thành công\n        this.newRating = null;\n        this.newComment = \"\";\n        this.newImage = null;\n\n        // Cập nhật danh sách đánh giá\n        this.fetchReviews(dishId);\n        this.fetchAverageRating(dishId);\n        this.checkUserReview(dishId);\n      } catch (error) {\n        console.error(\"Lỗi khi gửi đánh giá:\", error);\n        alert(\"Có lỗi xảy ra khi gửi đánh giá. Vui lòng thử lại.\");\n      }\n    }\n  },\n  watch: {\n    // Theo dõi thay đổi của tab và gọi lại API khi tab thay đổi\n    selectedTab() {\n      const dishId = this.$route.params.id;\n      this.fetchReviews(dishId);\n      this.fetchAverageRating(dishId);\n    }\n  },\n  mounted() {\n    const dishId = this.$route.params.id;\n    // Gọi API để lấy dữ liệu đánh giá khi component được mount\n    this.fetchAverageRating(dishId);\n    this.fetchReviews(dishId);\n    this.checkUserReview(dishId);\n  }\n};","map":{"version":3,"names":["axios","data","averageRating","totalReviews","reviews","selectedTab","newRating","hoverRating","newComment","newImage","hasReviewed","userReview","successMessage","computed","filteredReviews","filter","review","rating","isLoggedIn","$store","getters","methods","fetchAverageRating","dishId","response","get","average","error","console","fetchReviews","ratingFilter","checkUserReview","userId","userInfo","_id","params","handleImageUpload","event","file","target","files","submitReview","$route","id","alert","post","comment","headers","setTimeout","watch","mounted"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\ReviewSection.vue"],"sourcesContent":["<template>\n  <div class=\"review-container\">\n    <!-- Tổng quan đánh giá -->\n    <div class=\"review-summary\">\n      <h2>Đánh giá sản phẩm</h2>\n      <div class=\"rating-overview\">\n        <div class=\"average-rating\">\n          <h2>{{ averageRating }} trên 5</h2>\n          <div class=\"stars\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star\"\n              :class=\"{ filled: n <= averageRating }\"\n              >★</span\n            >\n          </div>\n          <p>({{ totalReviews }} đánh giá)</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tab chọn số sao -->\n    <div class=\"tabs\">\n      <button\n        :class=\"{ active: selectedTab === 'all' }\"\n        @click=\"\n          selectedTab = 'all';\n          fetchReviews(dishId);\n        \"\n      >\n        Tất cả\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 5 }\"\n        @click=\"\n          selectedTab = 5;\n          fetchReviews(dishId);\n        \"\n      >\n        5 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 4 }\"\n        @click=\"\n          selectedTab = 4;\n          fetchReviews(dishId);\n        \"\n      >\n        4 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 3 }\"\n        @click=\"\n          selectedTab = 3;\n          fetchReviews(dishId);\n        \"\n      >\n        3 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 2 }\"\n        @click=\"\n          selectedTab = 2;\n          fetchReviews(dishId);\n        \"\n      >\n        2 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 1 }\"\n        @click=\"\n          selectedTab = 1;\n          fetchReviews(dishId);\n        \"\n      >\n        1 Sao\n      </button>\n    </div>\n\n    <!-- Danh sách đánh giá -->\n    <div v-if=\"filteredReviews.length > 0\" class=\"reviews\">\n      <div\n        v-for=\"review in filteredReviews\"\n        :key=\"review._id\"\n        class=\"review-item\"\n      >\n        <div class=\"review-header\">\n          <img :src=\"review.userId.AVATAR\" alt=\"Avatar\" class=\"avatar\" />\n          <h4>{{ review.userId.USERNAME }}</h4>\n          <!-- Hiển thị tên người dùng -->\n          <div class=\"review-rating\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star\"\n              :class=\"{ filled: n <= review.rating }\"\n              >★</span\n            >\n          </div>\n          <p class=\"review-date\">\n            {{ new Date(review.date).toLocaleDateString() }}\n          </p>\n          <!-- Định dạng ngày -->\n        </div>\n        <p>{{ review.comment }}</p>\n      </div>\n    </div>\n    <p v-else>Không có đánh giá nào cho tab này.</p>\n    <!-- Phần hiển thị đánh giá của người dùng -->\n    <div v-if=\"hasReviewed\" class=\"user-review\">\n      <h3>Đánh giá của bạn</h3>\n      <div class=\"review-item\">\n        <div class=\"review-header\">\n          <div class=\"review-rating\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star\"\n              :class=\"{ filled: n <= userReview.rating }\"\n              >★</span\n            >\n          </div>\n          <p class=\"review-date\">\n            {{ new Date(userReview.date).toLocaleDateString() }}\n          </p>\n        </div>\n        <p>{{ userReview.comment }}</p>\n      </div>\n    </div>\n\n    <!-- Phần biểu mẫu thêm đánh giá -->\n    <div v-if=\"isLoggedIn && !hasReviewed\" class=\"review-form\">\n      <h3>Thêm đánh giá của bạn</h3>\n      <form @submit.prevent=\"submitReview(dishId)\">\n        <div class=\"rating-input\">\n          <label for=\"rating\">Số sao:</label>\n          <div class=\"stars2\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star2\"\n              :class=\"{ filled: n <= (hoverRating || newRating) }\"\n              @click=\"newRating = n\"\n              @mouseover=\"hoverRating = n\"\n              @mouseleave=\"hoverRating = 0\"\n              >★</span\n            >\n          </div>\n        </div>\n\n        <div class=\"comment-input\">\n          <label for=\"comment\">Bình luận:</label>\n          <textarea\n            v-model=\"newComment\"\n            placeholder=\"Nhập bình luận của bạn...\"\n            required\n          ></textarea>\n        </div>\n\n        <button type=\"submit\">Gửi đánh giá</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      averageRating: 0,\n      totalReviews: 0,\n      reviews: [],\n      selectedTab: \"all\", // Mặc định là tab tất cả\n      newRating: 0,\n      hoverRating: 0,\n      newComment: \"\",\n      newImage: null, // Lưu ảnh nếu có\n      hasReviewed: false, // Kiểm tra nếu người dùng đã đánh giá\n      userReview: null, // Thông tin đánh giá của người dùng nếu có\n      successMessage: \"\",\n    };\n  },\n  computed: {\n    // Lọc đánh giá dựa trên tab được chọn\n    filteredReviews() {\n      if (this.selectedTab === \"all\") {\n        return this.reviews;\n      }\n      return this.reviews.filter(\n        (review) => review.rating === this.selectedTab\n      );\n    },\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn; // Kiểm tra trạng thái đăng nhập\n    },\n  },\n  methods: {\n    // Lấy điểm đánh giá trung bình và tổng số đánh giá từ API\n    async fetchAverageRating(dishId) {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/review/getAverageRating/${dishId}`\n        );\n        this.averageRating = response.data.average;\n        this.totalReviews = response.data.totalReviews;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy điểm đánh giá trung bình:\", error);\n      }\n    },\n\n    // Lấy danh sách đánh giá từ API, có thể lọc theo số sao\n    async fetchReviews(dishId) {\n      try {\n        const ratingFilter =\n          this.selectedTab === \"all\" ? \"\" : `?rating=${this.selectedTab}`;\n        const response = await axios.get(\n          `http://localhost:3000/review/getReviews/${dishId}${ratingFilter}`\n        );\n        this.reviews = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách đánh giá:\", error);\n      }\n    },\n\n    async checkUserReview(dishId) {\n      try {\n        const userId = this.$store.getters.userInfo._id; // Lấy _id từ userInfo\n        const response = await axios.get(\n          `http://localhost:3000/review/checkUserReview/${dishId}`,\n          {\n            params: { userId }, // Truyền userId qua request\n          }\n        );\n        if (response.data.review) {\n          this.hasReviewed = true;\n          this.userReview = response.data.review; // Lưu đánh giá của người dùng\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi kiểm tra đánh giá của người dùng:\", error);\n      }\n    },\n    // Xử lý upload ảnh\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.newImage = file; // Lưu ảnh để gửi lên server\n    },\n\n    // Phương thức gửi đánh giá\n    async submitReview() {\n      const dishId = this.$route.params.id;\n\n      // Kiểm tra trạng thái đăng nhập\n      if (!this.isLoggedIn) {\n        alert(\"Bạn cần đăng nhập để đánh giá.\");\n        return;\n      }\n\n      // Kiểm tra nếu thiếu bất kỳ trường bắt buộc nào\n      if (!dishId || !this.newRating || !this.newComment) {\n        alert(\"Vui lòng điền đầy đủ thông tin (số sao và bình luận).\");\n        return;\n      }\n\n      try {\n        // Gửi request trực tiếp với rating và comment mà không qua reviewData\n        const response = await axios.post(\n          `http://localhost:3000/review/createReview/${dishId}`,\n          {\n            rating: this.newRating,\n            comment: this.newComment,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Thông báo thành công\n        this.successMessage = \"Đánh giá của bạn đã được gửi thành công.\";\n        setTimeout(() => {\n          this.successMessage = \"\";\n        }, 3000);\n\n        // Reset các trường sau khi gửi thành công\n        this.newRating = null;\n        this.newComment = \"\";\n        this.newImage = null;\n\n        // Cập nhật danh sách đánh giá\n        this.fetchReviews(dishId);\n        this.fetchAverageRating(dishId);\n        this.checkUserReview(dishId);\n      } catch (error) {\n        console.error(\"Lỗi khi gửi đánh giá:\", error);\n        alert(\"Có lỗi xảy ra khi gửi đánh giá. Vui lòng thử lại.\");\n      }\n    },\n  },\n  watch: {\n    // Theo dõi thay đổi của tab và gọi lại API khi tab thay đổi\n    selectedTab() {\n      const dishId = this.$route.params.id;\n      this.fetchReviews(dishId);\n      this.fetchAverageRating(dishId);\n    },\n  },\n  mounted() {\n    const dishId = this.$route.params.id;\n    // Gọi API để lấy dữ liệu đánh giá khi component được mount\n    this.fetchAverageRating(dishId);\n    this.fetchReviews(dishId);\n    this.checkUserReview(dishId);\n  },\n};\n</script>\n\n<style scoped>\n.review-container {\n  max-width: 1300px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: white;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n.review-summary {\n  text-align: center;\n  margin-bottom: 20px;\n}\n.average-rating h2 {\n  font-size: 2rem;\n  font-weight: bold;\n}\n.stars {\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n}\n.star {\n  font-size: 1.5rem;\n  color: #ddd;\n  margin-right: 5px;\n}\n.star.filled {\n  color: gold;\n}\n.tabs {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n.tabs button {\n  padding: 10px 20px;\n  border: none;\n  background-color: #f1f1f1;\n  cursor: pointer;\n  margin-right: 5px;\n  transition: background-color 0.3s;\n}\n.tabs button.active,\n.tabs button:hover {\n  background-color: #ff6600;\n  color: white;\n}\n.reviews {\n  display: flex;\n  flex-direction: column;\n}\n.review-item {\n  display: flex;\n  flex-direction: column;\n  padding: 15px 0;\n  border-bottom: 1px solid #eee;\n  gap: 10px;\n}\n.review-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n.review-header h4 {\n  font-size: 1.2rem;\n  margin: 0;\n  flex: 1;\n}\n.review-rating {\n  display: flex;\n  justify-content: flex-start;\n  flex: 1;\n  gap: 3px;\n}\n.review-date {\n  color: #aaa;\n  font-size: 0.9rem;\n  text-align: right;\n  flex: 1;\n}\n.review-images {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n.review-image {\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  flex-shrink: 0;\n}\n\n.review-form {\n  margin-top: 30px;\n}\n.review-form h3 {\n  font-size: 1.5rem;\n  margin-bottom: 15px;\n}\n.review-form form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n.review-form textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n.review-form select,\n.review-form input[type=\"file\"],\n.review-form button {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n.review-form button {\n  background-color: #ff6600;\n  color: white;\n  cursor: pointer;\n}\n.review-form button:hover {\n  background-color: #e55a00;\n}\n.stars2 {\n  display: flex;\n  gap: 5px;\n  cursor: pointer;\n}\n.star2 {\n  font-size: 2rem;\n  color: #ddd; /* Màu xám cho sao chưa chọn */\n  transition: color 0.3s;\n}\n.star2.filled {\n  color: gold; /* Màu vàng cho sao đã chọn hoặc hover */\n}\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}