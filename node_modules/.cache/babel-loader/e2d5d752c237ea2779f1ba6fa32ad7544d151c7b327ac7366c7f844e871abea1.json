{"ast":null,"code":"import { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from 'vuex'; // Import useStore từ Vuex\n\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loginForm = ref({\n      username: \"\",\n      password: \"\"\n    });\n    const isPasswordVisible = ref(false);\n    const router = useRouter();\n    const store = useStore(); // Sử dụng Vuex store\n\n    const handleSubmit = async () => {\n      if (loginForm.value.username && loginForm.value.password) {\n        try {\n          const role = await store.dispatch('login', {\n            username: loginForm.value.username,\n            password: loginForm.value.password\n          });\n          if (role === 'admin' || role === 'staff') {\n            console.log(\"Đăng nhập thành công\");\n            // Điều hướng sau khi đăng nhập thành công\n            router.push(\"/\");\n          } else if (role === 'unauthorized') {\n            alert(\"Bạn không có quyền truy cập.\");\n          } else {\n            alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\n          }\n        } catch (error) {\n          console.error(\"Đăng nhập thất bại:\", error);\n          alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\n        }\n      } else {\n        alert(\"Vui lòng nhập đầy đủ thông tin\");\n      }\n    };\n    const togglePasswordVisibility = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const handleFacebookLogin = () => {\n      console.log(\"Login with Facebook\");\n      // Thêm logic đăng nhập qua Facebook\n    };\n    const handleGoogleLogin = () => {\n      console.log(\"Login with Google\");\n      // Thêm logic đăng nhập qua Google\n    };\n    const __returned__ = {\n      loginForm,\n      isPasswordVisible,\n      router,\n      store,\n      handleSubmit,\n      togglePasswordVisibility,\n      handleFacebookLogin,\n      handleGoogleLogin,\n      get FontAwesomeIcon() {\n        return FontAwesomeIcon;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["FontAwesomeIcon","ref","useRouter","useStore","loginForm","username","password","isPasswordVisible","router","store","handleSubmit","value","role","dispatch","console","log","push","alert","error","togglePasswordVisibility","handleFacebookLogin","handleGoogleLogin"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <!-- Tiêu đề Đăng nhập -->\n    <h2 class=\"login-title\">Đăng Nhập</h2>\n\n    <form @submit.prevent=\"handleSubmit\" class=\"login-form\">\n      <div class=\"form-group\">\n        <input\n          type=\"text\"\n          id=\"username\"\n          v-model=\"loginForm.username\"\n          placeholder=\"Tên tài khoản\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <input\n          :type=\"isPasswordVisible ? 'text' : 'password'\"\n          id=\"password\"\n          v-model=\"loginForm.password\"\n          placeholder=\"Mật khẩu\"\n          required\n        />\n        <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n          <!-- Biểu tượng toggle mật khẩu -->\n          <font-awesome-icon :icon=\"isPasswordVisible ? 'eye-slash' : 'eye'\" />\n        </span>\n      </div>\n\n      <button type=\"submit\" class=\"btn-submit\">Đăng nhập</button>\n\n      <div class=\"form-links\">\n        <router-link to=\"/forgot-password\">Quên mật khẩu</router-link>\n        <router-link to=\"/sms-login\">Đăng nhập với SMS</router-link>\n      </div>\n\n      <div class=\"divider\">HOẶC</div>\n\n      <div class=\"social-login\">\n        <button\n          type=\"button\"\n          class=\"btn-social btn-facebook\"\n          @click=\"handleFacebookLogin\"\n        >\n          <img\n            src=\"https://cdn.freebiesupply.com/logos/large/2x/facebook-3-logo-png-transparent.png\"\n            class=\"social-icon\"\n            alt=\"Facebook Logo\"\n          />\n          Facebook\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn-social btn-google\"\n          @click=\"handleGoogleLogin\"\n        >\n          <img\n            src=\"https://www.pngall.com/wp-content/uploads/13/Google-Logo.png\"\n            class=\"social-icon\"\n            alt=\"Google Logo\"\n          />\n          Google\n        </button>\n      </div>\n\n      <div class=\"form-footer\">\n        <p>\n          Bạn mới biết đến MTHN Restaurant ?\n          <router-link to=\"/register\">Đăng ký</router-link>\n        </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from 'vuex'; // Import useStore từ Vuex\n\nconst loginForm = ref({\n  username: \"\",\n  password: \"\",\n});\n\nconst isPasswordVisible = ref(false);\n\nconst router = useRouter();\nconst store = useStore(); // Sử dụng Vuex store\n\nconst handleSubmit = async () => {\n  if (loginForm.value.username && loginForm.value.password) {\n    try {\n      const role = await store.dispatch('login', {\n        username: loginForm.value.username,\n        password: loginForm.value.password\n      });\n\n      if (role === 'admin' || role === 'staff') {\n        console.log(\"Đăng nhập thành công\");\n        // Điều hướng sau khi đăng nhập thành công\n        router.push(\"/\");\n      } else if (role === 'unauthorized') {\n        alert(\"Bạn không có quyền truy cập.\");\n      } else {\n        alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\n      }\n    } catch (error) {\n      console.error(\"Đăng nhập thất bại:\", error);\n      alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\n    }\n  } else {\n    alert(\"Vui lòng nhập đầy đủ thông tin\");\n  }\n};\n\nconst togglePasswordVisibility = () => {\n  isPasswordVisible.value = !isPasswordVisible.value;\n};\n\nconst handleFacebookLogin = () => {\n  console.log(\"Login with Facebook\");\n  // Thêm logic đăng nhập qua Facebook\n};\n\nconst handleGoogleLogin = () => {\n  console.log(\"Login with Google\");\n  // Thêm logic đăng nhập qua Google\n};\n</script>\n\n<style scoped>\n/* Styling của phần login form */\n.login-container {\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 30px; /* Tăng padding để tạo không gian */\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Giảm độ tối của bóng */\n}\n\n.login-title {\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: #ee4d2d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  position: relative;\n  margin-bottom: 25px; /* Tăng khoảng cách giữa các trường */\n}\n\n.form-group input {\n  width: 100%;\n  padding: 14px; /* Tăng padding */\n  border: 1px solid #ddd;\n  border-radius: 8px; /* Tăng border-radius để các ô trở nên mềm mại hơn */\n  font-size: 16px; /* Tăng kích thước chữ */\n}\n\n.toggle-password {\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 14px;\n  background: linear-gradient(45deg, #ee4d2d, #ff5733); /* Thêm gradient */\n  color: white;\n  border: none;\n  border-radius: 8px; /* Tăng border-radius */\n  cursor: pointer;\n  font-size: 18px; /* Tăng kích thước chữ */\n  transition: background 0.3s; /* Hiệu ứng chuyển màu khi hover */\n}\n\n.btn-submit:hover {\n  background: linear-gradient(\n    45deg,\n    #ff5733,\n    #ff6f61\n  ); /* Thay đổi gradient khi hover */\n}\n\n.form-links {\n  display: flex;\n  justify-content: space-between;\n  margin: 15px 0;\n  font-size: 14px;\n}\n\n.form-links a {\n  color: #007bff;\n  text-decoration: none;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n  color: #888;\n  margin: 20px 0;\n}\n\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #ddd;\n  margin: 0 10px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.btn-social {\n  width: 48%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: #333;\n  transition: all 0.3s ease;\n}\n\n.social-icon {\n  margin-right: 10px; /* Thêm khoảng cách giữa logo và chữ */\n  width: 24px; /* Điều chỉnh kích thước logo */\n  height: 24px; /* Điều chỉnh kích thước logo */\n}\n\n.btn-facebook {\n  color: #3b5998;\n  border-color: #3b5998;\n}\n\n.btn-google {\n  color: #db4437;\n  border-color: #db4437;\n}\n\n.btn-facebook:hover {\n  background-color: #3b5998;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437; /* Thay đổi nền khi hover */\n  color: white;\n}\n\n.form-footer {\n  margin-top: 25px;\n  text-align: center;\n}\n\n.form-footer p {\n  font-size: 14px;\n}\n</style>\n"],"mappings":"AA6EA,SAASA,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,MAAM,CAAC,CAAC;;;;;;;;IAEjC,MAAMC,SAAS,GAAGH,GAAG,CAAC;MACpBI,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,iBAAiB,GAAGN,GAAG,CAAC,KAAK,CAAC;IAEpC,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,KAAK,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAE1B,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIN,SAAS,CAACO,KAAK,CAACN,QAAQ,IAAID,SAAS,CAACO,KAAK,CAACL,QAAQ,EAAE;QACxD,IAAI;UACF,MAAMM,IAAI,GAAG,MAAMH,KAAK,CAACI,QAAQ,CAAC,OAAO,EAAE;YACzCR,QAAQ,EAAED,SAAS,CAACO,KAAK,CAACN,QAAQ;YAClCC,QAAQ,EAAEF,SAAS,CAACO,KAAK,CAACL;UAC5B,CAAC,CAAC;UAEF,IAAIM,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,EAAE;YACxCE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;YACnC;YACAP,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;UAClB,CAAC,MAAM,IAAIJ,IAAI,KAAK,cAAc,EAAE;YAClCK,KAAK,CAAC,8BAA8B,CAAC;UACvC,CAAC,MAAM;YACLA,KAAK,CAAC,0EAA0E,CAAC;UACnF;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;UAC3CD,KAAK,CAAC,0EAA0E,CAAC;QACnF;MACF,CAAC,MAAM;QACLA,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF,CAAC;IAED,MAAME,wBAAwB,GAAGA,CAAA,KAAM;MACrCZ,iBAAiB,CAACI,KAAK,GAAG,CAACJ,iBAAiB,CAACI,KAAK;IACpD,CAAC;IAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;MAChCN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;IACF,CAAC;IAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;MAC9BP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}