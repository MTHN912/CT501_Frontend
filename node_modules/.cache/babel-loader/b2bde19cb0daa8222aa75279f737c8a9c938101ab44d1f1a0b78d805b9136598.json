{"ast":null,"code":"import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const registerForm = ref({\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      address: \"\" // Thêm trường Địa Chỉ\n    });\n    const errors = ref({\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      otp: \"\"\n    });\n    const isPasswordVisible = ref(false);\n    const isConfirmPasswordVisible = ref(false);\n    const showOTP = ref(false);\n    const otp = ref(\"\");\n    const otpTimer = ref(0);\n    const isOTPSending = ref(false);\n    const otpInterval = ref(null);\n    const router = useRouter();\n    const togglePasswordVisibility = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const toggleConfirmPasswordVisibility = () => {\n      isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n    };\n\n    // Hàm validate trường bắt buộc\n    const validateForm = () => {\n      errors.value.fullname = !registerForm.value.fullname ? \"Họ và tên không được để trống\" : \"\";\n      errors.value.email = !registerForm.value.email ? \"Email không được để trống\" : \"\";\n      errors.value.username = !registerForm.value.username ? \"Tên tài khoản không được để trống\" : \"\";\n      errors.value.password = !registerForm.value.password ? \"Mật khẩu không được để trống\" : \"\";\n      errors.value.confirmPassword = registerForm.value.password !== registerForm.value.confirmPassword ? \"Mật khẩu xác nhận không khớp\" : \"\";\n      return !Object.values(errors.value).some(err => err);\n    };\n    const handleSubmit = async () => {\n      if (!validateForm()) {\n        Swal.fire({\n          title: \"Lỗi\",\n          text: \"Vui lòng kiểm tra lại các trường bắt buộc.\",\n          icon: \"error\"\n        });\n        return;\n      }\n      if (showOTP.value) {\n        // Xác thực OTP\n        try {\n          const response = await axios.post(\"http://localhost:3000/user/verifyOTPAndActivateUser\", {\n            otp: otp.value,\n            email: registerForm.value.email\n          });\n          if (response.status === 200) {\n            Swal.fire({\n              title: \"Xác thực thành công!\",\n              icon: \"success\",\n              confirmButtonText: \"Đăng nhập\"\n            }).then(() => {\n              router.push(\"/login\");\n            });\n          }\n        } catch (error) {\n          Swal.fire({\n            title: \"Xác thực thất bại\",\n            text: \"Mã OTP không đúng, vui lòng thử lại\",\n            icon: \"error\"\n          });\n        }\n      } else {\n        // Đăng ký người dùng\n        try {\n          const response = await axios.post(\"http://localhost:3000/user/register\", {\n            FULLNAME: registerForm.value.fullname,\n            EMAIL: registerForm.value.email,\n            USERNAME: registerForm.value.username,\n            PASSWORD: registerForm.value.password,\n            ADDRESS: registerForm.value.address // Truyền địa chỉ nếu có\n          });\n          if (response.status === 201) {\n            Swal.fire({\n              title: \"Đăng ký thành công!\",\n              text: \"Vui lòng kiểm tra email để nhận mã OTP.\",\n              icon: \"success\"\n            });\n            showOTP.value = true;\n            startNewOTPTimer();\n          }\n        } catch (error) {\n          Swal.fire({\n            title: \"Lỗi đăng ký\",\n            text: \"Có lỗi xảy ra, vui lòng thử lại sau.\",\n            icon: \"error\"\n          });\n        }\n      }\n    };\n    const startNewOTPTimer = () => {\n      otpTimer.value = 60;\n      clearInterval(otpInterval.value);\n      otpInterval.value = setInterval(() => {\n        if (otpTimer.value > 0) {\n          otpTimer.value--;\n        } else {\n          clearInterval(otpInterval.value);\n        }\n      }, 1000);\n    };\n    const resendOTP = async () => {\n      isOTPSending.value = true;\n      try {\n        const response = await axios.post(\"http://localhost:3000/user/resendOTP\", {\n          email: registerForm.value.email\n        });\n        if (response.status === 200) {\n          Swal.fire({\n            title: \"OTP đã được gửi lại!\",\n            icon: \"success\"\n          });\n          startNewOTPTimer();\n        }\n      } catch (error) {\n        console.error(\"Gửi lại OTP thất bại:\", error);\n        Swal.fire({\n          title: \"Lỗi\",\n          text: \"Không thể gửi lại OTP, vui lòng thử lại sau.\",\n          icon: \"error\"\n        });\n      } finally {\n        isOTPSending.value = false;\n      }\n    };\n    const handleFacebookLogin = () => {\n      console.log(\"Login with Facebook\");\n      // Thêm logic đăng nhập qua Facebook\n    };\n    const handleGoogleLogin = () => {\n      console.log(\"Login with Google\");\n      // Thêm logic đăng nhập qua Google\n    };\n    const __returned__ = {\n      registerForm,\n      errors,\n      isPasswordVisible,\n      isConfirmPasswordVisible,\n      showOTP,\n      otp,\n      otpTimer,\n      isOTPSending,\n      otpInterval,\n      router,\n      togglePasswordVisibility,\n      toggleConfirmPasswordVisibility,\n      validateForm,\n      handleSubmit,\n      startNewOTPTimer,\n      resendOTP,\n      handleFacebookLogin,\n      handleGoogleLogin,\n      get axios() {\n        return axios;\n      },\n      get Swal() {\n        return Swal;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","Swal","ref","useRouter","registerForm","fullname","email","username","password","confirmPassword","address","errors","otp","isPasswordVisible","isConfirmPasswordVisible","showOTP","otpTimer","isOTPSending","otpInterval","router","togglePasswordVisibility","value","toggleConfirmPasswordVisibility","validateForm","Object","values","some","err","handleSubmit","fire","title","text","icon","response","post","status","confirmButtonText","then","push","error","FULLNAME","EMAIL","USERNAME","PASSWORD","ADDRESS","startNewOTPTimer","clearInterval","setInterval","resendOTP","console","handleFacebookLogin","log","handleGoogleLogin"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Đăng Ký</h2>\n\n    <form @submit.prevent=\"handleSubmit\" class=\"register-form\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"fullname\">Họ và tên <span class=\"required\">*</span></label>\n          <input\n            type=\"text\"\n            id=\"fullname\"\n            v-model=\"registerForm.fullname\"\n            placeholder=\"Họ và tên\"\n            required\n          />\n          <span v-if=\"errors.fullname\" class=\"error\">{{ errors.fullname }}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email <span class=\"required\">*</span></label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"registerForm.email\"\n            placeholder=\"Email\"\n            required\n          />\n          <span v-if=\"errors.email\" class=\"error\">{{ errors.email }}</span>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"username\">Tên tài khoản <span class=\"required\">*</span></label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"registerForm.username\"\n            placeholder=\"Tên tài khoản\"\n            required\n          />\n          <span v-if=\"errors.username\" class=\"error\">{{ errors.username }}</span>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Mật khẩu <span class=\"required\">*</span></label>\n          <input\n            :type=\"isPasswordVisible ? 'text' : 'password'\"\n            id=\"password\"\n            v-model=\"registerForm.password\"\n            placeholder=\"Mật khẩu\"\n            required\n          />\n          <span v-if=\"errors.password\" class=\"error\">{{ errors.password }}</span>\n          <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n            <font-awesome-icon\n              :icon=\"isPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label for=\"confirmPassword\">Xác nhận mật khẩu <span class=\"required\">*</span></label>\n          <input\n            :type=\"isConfirmPasswordVisible ? 'text' : 'password'\"\n            id=\"confirmPassword\"\n            v-model=\"registerForm.confirmPassword\"\n            placeholder=\"Xác nhận mật khẩu\"\n            required\n          />\n          <span v-if=\"errors.confirmPassword\" class=\"error\">{{ errors.confirmPassword }}</span>\n          <span class=\"toggle-password\" @click=\"toggleConfirmPasswordVisibility\">\n            <font-awesome-icon\n              :icon=\"isConfirmPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <!-- Thêm trường Địa Chỉ -->\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <label for=\"address\">Địa chỉ</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            v-model=\"registerForm.address\"\n            placeholder=\"Địa chỉ\"\n          />\n        </div>\n      </div>\n\n      <!-- Trường OTP -->\n      <div v-if=\"showOTP\" class=\"form-group\">\n        <label for=\"otp\">Nhập mã OTP <span class=\"required\">*</span></label>\n        <input\n          type=\"text\"\n          id=\"otp\"\n          v-model=\"otp\"\n          placeholder=\"Nhập mã OTP\"\n          required\n        />\n        <button\n          type=\"button\"\n          @click=\"resendOTP\"\n          :disabled=\"isOTPSending || otpTimer > 0\"\n        >\n          Gửi lại OTP {{ otpTimer > 0 ? `(${otpTimer})` : \"\" }}\n        </button>\n        <span v-if=\"errors.otp\" class=\"error\">{{ errors.otp }}</span>\n      </div>\n\n      <button type=\"submit\" class=\"btn-submit\">\n        {{ showOTP ? \"Xác Thực\" : \"Đăng ký\" }}\n      </button>\n\n      <div class=\"divider\">HOẶC</div>\n\n      <div class=\"social-login\">\n        <button\n          type=\"button\"\n          class=\"btn-social btn-facebook\"\n          @click=\"handleFacebookLogin\"\n        >\n          <img\n            src=\"https://cdn.freebiesupply.com/logos/large/2x/facebook-3-logo-png-transparent.png\"\n            class=\"social-icon\"\n            alt=\"Facebook Logo\"\n          />\n          Facebook\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn-social btn-google\"\n          @click=\"handleGoogleLogin\"\n        >\n          <img\n            src=\"https://www.pngall.com/wp-content/uploads/13/Google-Logo.png\"\n            class=\"social-icon\"\n            alt=\"Google Logo\"\n          />\n          Google\n        </button>\n      </div>\n\n      <div class=\"form-footer\">\n        <p>\n          Đã có tài khoản?\n          <router-link to=\"/login\">Đăng nhập</router-link>\n        </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst registerForm = ref({\n  fullname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  address: \"\", // Thêm trường Địa Chỉ\n});\n\nconst errors = ref({\n  fullname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  otp: \"\",\n});\n\nconst isPasswordVisible = ref(false);\nconst isConfirmPasswordVisible = ref(false);\nconst showOTP = ref(false);\nconst otp = ref(\"\");\nconst otpTimer = ref(0);\nconst isOTPSending = ref(false);\nconst otpInterval = ref(null);\nconst router = useRouter();\n\nconst togglePasswordVisibility = () => {\n  isPasswordVisible.value = !isPasswordVisible.value;\n};\n\nconst toggleConfirmPasswordVisibility = () => {\n  isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n};\n\n// Hàm validate trường bắt buộc\nconst validateForm = () => {\n  errors.value.fullname = !registerForm.value.fullname ? \"Họ và tên không được để trống\" : \"\";\n  errors.value.email = !registerForm.value.email ? \"Email không được để trống\" : \"\";\n  errors.value.username = !registerForm.value.username ? \"Tên tài khoản không được để trống\" : \"\";\n  errors.value.password = !registerForm.value.password ? \"Mật khẩu không được để trống\" : \"\";\n  errors.value.confirmPassword = registerForm.value.password !== registerForm.value.confirmPassword\n    ? \"Mật khẩu xác nhận không khớp\"\n    : \"\";\n  return !Object.values(errors.value).some((err) => err);\n};\n\nconst handleSubmit = async () => {\n  if (!validateForm()) {\n    Swal.fire({\n      title: \"Lỗi\",\n      text: \"Vui lòng kiểm tra lại các trường bắt buộc.\",\n      icon: \"error\",\n    });\n    return;\n  }\n\n  if (showOTP.value) {\n    // Xác thực OTP\n    try {\n      const response = await axios.post(\"http://localhost:3000/user/verifyOTPAndActivateUser\", {\n        otp: otp.value,\n        email: registerForm.value.email,\n      });\n\n      if (response.status === 200) {\n        Swal.fire({\n          title: \"Xác thực thành công!\",\n          icon: \"success\",\n          confirmButtonText: \"Đăng nhập\",\n        }).then(() => {\n          router.push(\"/login\");\n        });\n      }\n    } catch (error) {\n      Swal.fire({\n        title: \"Xác thực thất bại\",\n        text: \"Mã OTP không đúng, vui lòng thử lại\",\n        icon: \"error\",\n      });\n    }\n  } else {\n    // Đăng ký người dùng\n    try {\n      const response = await axios.post(\"http://localhost:3000/user/register\", {\n        FULLNAME: registerForm.value.fullname,\n        EMAIL: registerForm.value.email,\n        USERNAME: registerForm.value.username,\n        PASSWORD: registerForm.value.password,\n        ADDRESS: registerForm.value.address, // Truyền địa chỉ nếu có\n      });\n\n      if (response.status === 201) {\n        Swal.fire({\n          title: \"Đăng ký thành công!\",\n          text: \"Vui lòng kiểm tra email để nhận mã OTP.\",\n          icon: \"success\",\n        });\n        showOTP.value = true;\n        startNewOTPTimer();\n      }\n    } catch (error) {\n      Swal.fire({\n        title: \"Lỗi đăng ký\",\n        text: \"Có lỗi xảy ra, vui lòng thử lại sau.\",\n        icon: \"error\",\n      });\n    }\n  }\n};\n\nconst startNewOTPTimer = () => {\n  otpTimer.value = 60;\n  clearInterval(otpInterval.value);\n\n  otpInterval.value = setInterval(() => {\n    if (otpTimer.value > 0) {\n      otpTimer.value--;\n    } else {\n      clearInterval(otpInterval.value);\n    }\n  }, 1000);\n};\n\nconst resendOTP = async () => {\n  isOTPSending.value = true;\n  try {\n    const response = await axios.post(\"http://localhost:3000/user/resendOTP\", {\n      email: registerForm.value.email,\n    });\n\n    if (response.status === 200) {\n      Swal.fire({\n        title: \"OTP đã được gửi lại!\",\n        icon: \"success\",\n      });\n      startNewOTPTimer();\n    }\n  } catch (error) {\n    console.error(\"Gửi lại OTP thất bại:\", error);\n    Swal.fire({\n      title: \"Lỗi\",\n      text: \"Không thể gửi lại OTP, vui lòng thử lại sau.\",\n      icon: \"error\",\n    });\n  } finally {\n    isOTPSending.value = false;\n  }\n};\n\nconst handleFacebookLogin = () => {\n  console.log(\"Login with Facebook\");\n  // Thêm logic đăng nhập qua Facebook\n};\n\nconst handleGoogleLogin = () => {\n  console.log(\"Login with Google\");\n  // Thêm logic đăng nhập qua Google\n};\n</script>\n\n<style scoped>\n.error-message {\n  color: red;\n  font-size: 12px;\n  margin-top: 4px;\n}\n.register-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.register-title {\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: #ee4d2d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  position: relative;\n  width: 48%;\n}\n\n.form-group.full-width {\n  width: 100%;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 14px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 16px;\n}\n\n.toggle-password {\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 14px;\n  background: #ee4d2d;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: background 0.3s;\n}\n\n.btn-submit:hover {\n  background: #ff6347;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n  color: #888;\n  margin: 20px 0;\n}\n\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #ddd;\n  margin: 0 10px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.btn-social {\n  width: 48%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: #333;\n  transition: all 0.3s ease;\n}\n\n.social-icon {\n  margin-right: 10px;\n  width: 24px;\n  height: 24px;\n}\n\n.btn-facebook {\n  color: #3b5998;\n  border-color: #3b5998;\n}\n\n.btn-google {\n  color: #db4437;\n  border-color: #db4437;\n}\n\n.btn-facebook:hover {\n  background-color: #3b5998;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437;\n  color: white;\n}\n\n.form-footer {\n  margin-top: 25px;\n  text-align: center;\n}\n\n.form-footer p {\n  font-size: 14px;\n}\n\n@media (max-width: 600px) {\n  .register-container {\n    max-width: 100%;\n    margin: 20px;\n    padding: 20px;\n  }\n\n  .form-row {\n    flex-direction: column;\n  }\n\n  .form-group,\n  .form-group.full-width {\n    width: 100%;\n    margin-bottom: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}