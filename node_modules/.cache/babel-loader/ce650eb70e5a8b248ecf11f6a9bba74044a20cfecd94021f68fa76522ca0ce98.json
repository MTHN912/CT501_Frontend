{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loginForm = ref({\n      username: \"\",\n      password: \"\",\n      remember: false\n    });\n    const router = useRouter();\n\n    // Hàm xử lý khi người dùng nhấn Đăng nhập\n    const handleSubmit = () => {\n      if (loginForm.value.username && loginForm.value.password) {\n        // Xử lý đăng nhập (gọi API hoặc thực hiện logic khác)\n        console.log(\"Tên đăng nhập:\", loginForm.value.username);\n        console.log(\"Mật khẩu:\", loginForm.value.password);\n\n        // Điều hướng sau khi đăng nhập thành công\n        router.push(\"/\");\n      } else {\n        alert(\"Vui lòng nhập đầy đủ thông tin\");\n      }\n    };\n    const __returned__ = {\n      loginForm,\n      router,\n      handleSubmit,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","loginForm","username","password","remember","router","handleSubmit","value","console","log","push","alert"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Login.vue"],"sourcesContent":["<template>\n    <div class=\"login-container\">\n      <form @submit.prevent=\"handleSubmit\" class=\"login-form\">\n        <div class=\"form-group\">\n          <label for=\"username\">Tên đăng nhập</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"loginForm.username\"\n            placeholder=\"Nhập tên đăng nhập\"\n            required\n          />\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"password\">Mật khẩu</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            v-model=\"loginForm.password\"\n            placeholder=\"Nhập mật khẩu\"\n            required\n          />\n        </div>\n  \n        <div class=\"form-group\">\n          <label>\n            <input type=\"checkbox\" v-model=\"loginForm.remember\" /> Ghi nhớ\n          </label>\n        </div>\n  \n        <button type=\"submit\" class=\"btn-submit\">Đăng nhập</button>\n  \n        <div class=\"social-login\">\n          <p>Hoặc đăng nhập bằng:</p>\n          <button type=\"button\" class=\"btn-social btn-facebook\">\n            Đăng nhập bằng Facebook\n          </button>\n          <button type=\"button\" class=\"btn-social btn-google\">\n            Đăng nhập bằng Google\n          </button>\n        </div>\n  \n        <div class=\"form-footer\">\n          <router-link to=\"/forgot-password\">Quên mật khẩu?</router-link>\n          <p>\n            Chưa có tài khoản? <router-link to=\"/register\">Đăng ký</router-link>\n          </p>\n        </div>\n      </form>\n    </div>\n  </template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst loginForm = ref({\n  username: \"\",\n  password: \"\",\n  remember: false,\n});\n\nconst router = useRouter();\n\n// Hàm xử lý khi người dùng nhấn Đăng nhập\nconst handleSubmit = () => {\n  if (loginForm.value.username && loginForm.value.password) {\n    // Xử lý đăng nhập (gọi API hoặc thực hiện logic khác)\n    console.log(\"Tên đăng nhập:\", loginForm.value.username);\n    console.log(\"Mật khẩu:\", loginForm.value.password);\n\n    // Điều hướng sau khi đăng nhập thành công\n    router.push(\"/\");\n  } else {\n    alert(\"Vui lòng nhập đầy đủ thông tin\");\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\n.btn-submit {\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.btn-submit:hover {\n  background-color: #0056b3;\n}\n\n.form-footer {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.form-footer a {\n  color: #007bff;\n}\n\n.form-footer p {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AAsDA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,SAAS,GAAGF,GAAG,CAAC;MACpBG,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIL,SAAS,CAACM,KAAK,CAACL,QAAQ,IAAID,SAAS,CAACM,KAAK,CAACJ,QAAQ,EAAE;QACxD;QACAK,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,SAAS,CAACM,KAAK,CAACL,QAAQ,CAAC;QACvDM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,SAAS,CAACM,KAAK,CAACJ,QAAQ,CAAC;;QAElD;QACAE,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC;MAClB,CAAC,MAAM;QACLC,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}