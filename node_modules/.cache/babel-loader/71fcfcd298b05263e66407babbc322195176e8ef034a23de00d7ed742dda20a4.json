{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      averageRating: 0,\n      totalReviews: 0,\n      reviews: [],\n      selectedTab: \"all\",\n      // Mặc định là tab tất cả\n      newRating: null,\n      newComment: \"\",\n      newImage: null // Lưu ảnh nếu có\n    };\n  },\n  computed: {\n    // Lọc đánh giá dựa trên tab được chọn\n    filteredReviews() {\n      if (this.selectedTab === \"all\") {\n        return this.reviews;\n      }\n      return this.reviews.filter(review => review.rating === this.selectedTab);\n    },\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn; // Kiểm tra trạng thái đăng nhập\n    }\n  },\n  methods: {\n    // Lấy điểm đánh giá trung bình và tổng số đánh giá từ API\n    async fetchAverageRating(dishId) {\n      try {\n        const response = await axios.get(`http://localhost:3000/review/getAverageRating/${dishId}`);\n        this.averageRating = response.data.average;\n        this.totalReviews = response.data.totalReviews;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy điểm đánh giá trung bình:\", error);\n      }\n    },\n    // Lấy danh sách đánh giá từ API, có thể lọc theo số sao\n    async fetchReviews(dishId) {\n      try {\n        const ratingFilter = this.selectedTab === \"all\" ? \"\" : `?rating=${this.selectedTab}`;\n        const response = await axios.get(`http://localhost:3000/review/getReviews/${dishId}${ratingFilter}`);\n        this.reviews = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách đánh giá:\", error);\n      }\n    },\n    // Xử lý upload ảnh\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.newImage = file; // Lưu ảnh để gửi lên server\n    },\n    // Phương thức gửi đánh giá\n    async submitReview() {\n      // Lấy dishId từ URL\n      const dishId = this.$route.params.id;\n\n      // Kiểm tra trạng thái đăng nhập\n      if (!this.isLoggedIn) {\n        alert(\"Bạn cần đăng nhập để đánh giá.\");\n        return;\n      }\n\n      // Kiểm tra nếu thiếu bất kỳ trường bắt buộc nào\n      if (!dishId || !this.newRating || !this.newComment) {\n        alert(\"Vui lòng điền đầy đủ thông tin (số sao và bình luận).\");\n        return;\n      }\n      try {\n        const formData = new FormData();\n        formData.append(\"rating\", this.newRating); // Thêm số sao\n        formData.append(\"comment\", this.newComment); // Thêm bình luận\n        console.log(\"Rating:\", this.newRating);\n        console.log(\"Comment:\", this.newComment);\n\n        // Thêm hình ảnh nếu có\n        if (this.newImage) {\n          formData.append(\"images\", this.newImage); // Gửi hình ảnh dưới dạng formData\n        }\n        for (var pair of formData.entries()) {\n          console.log(pair[0] + \": \" + pair[1]);\n        }\n        console.log(\"dishId from URL:\", this.$route.params.id);\n        // Gửi request tới API với dishId trong URL\n        await axios.post(`http://localhost:3000/review/createReview/${dishId}`, formData);\n        alert(\"Đánh giá của bạn đã được gửi.\");\n\n        // Reset các trường sau khi gửi thành công\n        this.newRating = null;\n        this.newComment = \"\";\n        this.newImage = null;\n        this.fetchReviews(dishId); // Cập nhật danh sách đánh giá\n      } catch (error) {\n        console.error(\"Lỗi khi gửi đánh giá:\", error);\n      }\n    }\n  },\n  watch: {\n    // Theo dõi thay đổi của tab và gọi lại API khi tab thay đổi\n    selectedTab() {\n      const dishId = this.$route.params.id;\n      this.fetchReviews(dishId);\n    }\n  },\n  mounted() {\n    const dishId = this.$route.params.id;\n    // Gọi API để lấy dữ liệu đánh giá khi component được mount\n    this.fetchAverageRating(dishId);\n    this.fetchReviews(dishId);\n  }\n};","map":{"version":3,"names":["axios","data","averageRating","totalReviews","reviews","selectedTab","newRating","newComment","newImage","computed","filteredReviews","filter","review","rating","isLoggedIn","$store","getters","methods","fetchAverageRating","dishId","response","get","average","error","console","fetchReviews","ratingFilter","handleImageUpload","event","file","target","files","submitReview","$route","params","id","alert","formData","FormData","append","log","pair","entries","post","watch","mounted"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\ReviewSection.vue"],"sourcesContent":["<template>\n  <div class=\"review-container\">\n    <!-- Tổng quan đánh giá -->\n    <div class=\"review-summary\">\n      <h2>Đánh giá sản phẩm</h2>\n      <div class=\"rating-overview\">\n        <div class=\"average-rating\">\n          <h2>{{ averageRating }} trên 5</h2>\n          <div class=\"stars\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star\"\n              :class=\"{ filled: n <= averageRating }\"\n              >★</span\n            >\n          </div>\n          <p>({{ totalReviews }} đánh giá)</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tab chọn số sao -->\n    <div class=\"tabs\">\n      <button\n        :class=\"{ active: selectedTab === 'all' }\"\n        @click=\"\n          selectedTab = 'all';\n          fetchReviews(dishId);\n        \"\n      >\n        Tất cả\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 5 }\"\n        @click=\"\n          selectedTab = 5;\n          fetchReviews(dishId);\n        \"\n      >\n        5 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 4 }\"\n        @click=\"\n          selectedTab = 4;\n          fetchReviews(dishId);\n        \"\n      >\n        4 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 3 }\"\n        @click=\"\n          selectedTab = 3;\n          fetchReviews(dishId);\n        \"\n      >\n        3 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 2 }\"\n        @click=\"\n          selectedTab = 2;\n          fetchReviews(dishId);\n        \"\n      >\n        2 Sao\n      </button>\n      <button\n        :class=\"{ active: selectedTab === 1 }\"\n        @click=\"\n          selectedTab = 1;\n          fetchReviews(dishId);\n        \"\n      >\n        1 Sao\n      </button>\n    </div>\n\n    <!-- Danh sách đánh giá -->\n    <div v-if=\"filteredReviews.length > 0\" class=\"reviews\">\n      <div\n        v-for=\"review in filteredReviews\"\n        :key=\"review._id\"\n        class=\"review-item\"\n      >\n        <div class=\"review-header\">\n          <h4>{{ review.userId.USERNAME }}</h4>\n          <!-- Hiển thị tên người dùng -->\n          <div class=\"review-rating\">\n            <span\n              v-for=\"n in 5\"\n              :key=\"n\"\n              class=\"star\"\n              :class=\"{ filled: n <= review.rating }\"\n              >★</span\n            >\n          </div>\n          <p class=\"review-date\">\n            {{ new Date(review.date).toLocaleDateString() }}\n          </p>\n          <!-- Định dạng ngày -->\n        </div>\n        <p>{{ review.comment }}</p>\n\n        <!-- Hình ảnh review -->\n        <div\n          v-if=\"review.images && review.images.length > 0\"\n          class=\"review-images\"\n        >\n          <img\n            v-for=\"image in review.images\"\n            :src=\"image\"\n            :alt=\"'Hình ảnh đánh giá'\"\n            class=\"review-image\"\n          />\n        </div>\n      </div>\n    </div>\n    <p v-else>Không có đánh giá nào cho tab này.</p>\n\n    <!-- Biểu mẫu đánh giá mới -->\n    <div class=\"review-form\" v-if=\"isLoggedIn\">\n      <h3>Thêm đánh giá của bạn</h3>\n      <form @submit.prevent=\"submitReview(dishId)\">\n        <div class=\"rating-input\">\n          <label for=\"rating\">Số sao:</label>\n          <select v-model=\"newRating\" required>\n            <option v-for=\"n in 5\" :key=\"n\" :value=\"n\">{{ n }}</option>\n          </select>\n        </div>\n\n        <div class=\"comment-input\">\n          <label for=\"comment\">Bình luận:</label>\n          <textarea\n            v-model=\"newComment\"\n            placeholder=\"Nhập bình luận của bạn...\"\n            required\n          ></textarea>\n        </div>\n\n        <div class=\"image-input\">\n          <label for=\"image\">Chọn ảnh (tùy chọn):</label>\n          <input type=\"file\" @change=\"handleImageUpload\" />\n        </div>\n\n        <button type=\"submit\">Gửi đánh giá</button>\n      </form>\n    </div>\n    <p v-else>\n      Bạn cần <router-link to=\"/login\">đăng nhập</router-link> để đánh giá.\n    </p>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      averageRating: 0,\n      totalReviews: 0,\n      reviews: [],\n      selectedTab: \"all\", // Mặc định là tab tất cả\n      newRating: null,\n      newComment: \"\",\n      newImage: null, // Lưu ảnh nếu có\n    };\n  },\n  computed: {\n    // Lọc đánh giá dựa trên tab được chọn\n    filteredReviews() {\n      if (this.selectedTab === \"all\") {\n        return this.reviews;\n      }\n      return this.reviews.filter(\n        (review) => review.rating === this.selectedTab\n      );\n    },\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn; // Kiểm tra trạng thái đăng nhập\n    },\n  },\n  methods: {\n    // Lấy điểm đánh giá trung bình và tổng số đánh giá từ API\n    async fetchAverageRating(dishId) {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/review/getAverageRating/${dishId}`\n        );\n        this.averageRating = response.data.average;\n        this.totalReviews = response.data.totalReviews;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy điểm đánh giá trung bình:\", error);\n      }\n    },\n\n    // Lấy danh sách đánh giá từ API, có thể lọc theo số sao\n    async fetchReviews(dishId) {\n      try {\n        const ratingFilter =\n          this.selectedTab === \"all\" ? \"\" : `?rating=${this.selectedTab}`;\n        const response = await axios.get(\n          `http://localhost:3000/review/getReviews/${dishId}${ratingFilter}`\n        );\n        this.reviews = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách đánh giá:\", error);\n      }\n    },\n\n    // Xử lý upload ảnh\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.newImage = file; // Lưu ảnh để gửi lên server\n    },\n\n    // Phương thức gửi đánh giá\n    async submitReview() {\n      // Lấy dishId từ URL\n      const dishId = this.$route.params.id;\n\n      // Kiểm tra trạng thái đăng nhập\n      if (!this.isLoggedIn) {\n        alert(\"Bạn cần đăng nhập để đánh giá.\");\n        return;\n      }\n\n      // Kiểm tra nếu thiếu bất kỳ trường bắt buộc nào\n      if (!dishId || !this.newRating || !this.newComment) {\n        alert(\"Vui lòng điền đầy đủ thông tin (số sao và bình luận).\");\n        return;\n      }\n\n      try {\n        const formData = new FormData();\n        formData.append(\"rating\", this.newRating); // Thêm số sao\n        formData.append(\"comment\", this.newComment); // Thêm bình luận\n        console.log(\"Rating:\", this.newRating);\n        console.log(\"Comment:\", this.newComment);\n\n        // Thêm hình ảnh nếu có\n        if (this.newImage) {\n          formData.append(\"images\", this.newImage); // Gửi hình ảnh dưới dạng formData\n        }\n        for (var pair of formData.entries()) {\n          console.log(pair[0] + \": \" + pair[1]);\n        }\n        console.log(\"dishId from URL:\", this.$route.params.id);\n        // Gửi request tới API với dishId trong URL\n        await axios.post(\n          `http://localhost:3000/review/createReview/${dishId}`,\n          formData\n        );\n\n        alert(\"Đánh giá của bạn đã được gửi.\");\n\n        // Reset các trường sau khi gửi thành công\n        this.newRating = null;\n        this.newComment = \"\";\n        this.newImage = null;\n        this.fetchReviews(dishId); // Cập nhật danh sách đánh giá\n      } catch (error) {\n        console.error(\"Lỗi khi gửi đánh giá:\", error);\n      }\n    },\n  },\n  watch: {\n    // Theo dõi thay đổi của tab và gọi lại API khi tab thay đổi\n    selectedTab() {\n      const dishId = this.$route.params.id;\n      this.fetchReviews(dishId);\n    },\n  },\n  mounted() {\n    const dishId = this.$route.params.id;\n    // Gọi API để lấy dữ liệu đánh giá khi component được mount\n    this.fetchAverageRating(dishId);\n    this.fetchReviews(dishId);\n  },\n};\n</script>\n\n<style scoped>\n.review-container {\n  max-width: 1300px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: white;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n.review-summary {\n  text-align: center;\n  margin-bottom: 20px;\n}\n.average-rating h2 {\n  font-size: 2rem;\n  font-weight: bold;\n}\n.stars {\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n}\n.star {\n  font-size: 1.5rem;\n  color: #ddd;\n  margin-right: 5px;\n}\n.star.filled {\n  color: gold;\n}\n.tabs {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n.tabs button {\n  padding: 10px 20px;\n  border: none;\n  background-color: #f1f1f1;\n  cursor: pointer;\n  margin-right: 5px;\n  transition: background-color 0.3s;\n}\n.tabs button.active,\n.tabs button:hover {\n  background-color: #ff6600;\n  color: white;\n}\n.reviews {\n  display: flex;\n  flex-direction: column;\n}\n.review-item {\n  display: flex;\n  flex-direction: column;\n  padding: 15px 0;\n  border-bottom: 1px solid #eee;\n  gap: 10px;\n}\n.review-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n.review-header h4 {\n  font-size: 1.2rem;\n  margin: 0;\n  flex: 1;\n}\n.review-rating {\n  display: flex;\n  justify-content: flex-start;\n  flex: 1;\n  gap: 3px;\n}\n.review-date {\n  color: #aaa;\n  font-size: 0.9rem;\n  text-align: right;\n  flex: 1;\n}\n.review-images {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n.review-image {\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  flex-shrink: 0;\n}\n\n.review-form {\n  margin-top: 30px;\n}\n.review-form h3 {\n  font-size: 1.5rem;\n  margin-bottom: 15px;\n}\n.review-form form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n.review-form textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  resize: vertical;\n}\n.review-form select,\n.review-form input[type=\"file\"],\n.review-form button {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n.review-form button {\n  background-color: #ff6600;\n  color: white;\n  cursor: pointer;\n}\n.review-form button:hover {\n  background-color: #e55a00;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}