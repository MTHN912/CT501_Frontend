{"ast":null,"code":"import { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\"; // Sử dụng axios để gọi API\n\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const registerForm = ref({\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n    const isPasswordVisible = ref(false);\n    const isConfirmPasswordVisible = ref(false);\n    const router = useRouter();\n    const handleRegister = async () => {\n      if (registerForm.value.password === registerForm.value.confirmPassword && registerForm.value.username && registerForm.value.email && registerForm.value.fullname) {\n        try {\n          // Gọi API tới server\n          const response = await axios.post(\"http://localhost:3000/user/register\", {\n            FULLNAME: registerForm.value.fullname,\n            EMAIL: registerForm.value.email,\n            USERNAME: registerForm.value.username,\n            PASSWORD: registerForm.value.password\n            // confirmPassword: registerForm.value.confirmPassword,\n          });\n          if (response.status === 201) {\n            // Đăng ký thành công, chuyển hướng sang trang đăng nhập\n            console.log(\"Đăng ký thành công:\", response.data);\n            router.push(\"/login\");\n          }\n        } catch (error) {\n          // Xử lý lỗi từ server (ví dụ: tên đăng nhập hoặc email đã tồn tại)\n          if (error.response && error.response.data.errors) {\n            const errors = error.response.data.errors;\n            console.error(\"Lỗi:\", errors);\n            alert(\"Lỗi đăng ký: \" + (errors.USERNAME || errors.EMAIL || errors.general || \"Vui lòng thử lại sau\"));\n          } else {\n            console.error(\"Lỗi không xác định:\", error);\n            alert(\"Lỗi không xác định, vui lòng thử lại sau.\");\n          }\n        }\n      } else {\n        alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu khớp nhau\");\n      }\n    };\n    const togglePasswordVisibility = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const toggleConfirmPasswordVisibility = () => {\n      isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n    };\n    const handleFacebookLogin = () => {\n      console.log(\"Login with Facebook\");\n      // Thêm logic đăng nhập qua Facebook\n    };\n    const handleGoogleLogin = () => {\n      console.log(\"Login with Google\");\n      // Thêm logic đăng nhập qua Google\n    };\n    const __returned__ = {\n      registerForm,\n      isPasswordVisible,\n      isConfirmPasswordVisible,\n      router,\n      handleRegister,\n      togglePasswordVisibility,\n      toggleConfirmPasswordVisibility,\n      handleFacebookLogin,\n      handleGoogleLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","axios","registerForm","fullname","email","username","password","confirmPassword","isPasswordVisible","isConfirmPasswordVisible","router","handleRegister","value","response","post","FULLNAME","EMAIL","USERNAME","PASSWORD","status","console","log","data","push","error","errors","alert","general","togglePasswordVisibility","toggleConfirmPasswordVisibility","handleFacebookLogin","handleGoogleLogin"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Đăng Ký</h2>\n\n    <form @submit.prevent=\"handleRegister\" class=\"register-form\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"fullname\"\n            v-model=\"registerForm.fullname\"\n            placeholder=\"Họ và tên\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"registerForm.email\"\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"registerForm.username\"\n            placeholder=\"Tên tài khoản\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            :type=\"isPasswordVisible ? 'text' : 'password'\"\n            id=\"password\"\n            v-model=\"registerForm.password\"\n            placeholder=\"Mật khẩu\"\n            required\n          />\n          <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n            <font-awesome-icon\n              :icon=\"isPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <input\n            :type=\"isConfirmPasswordVisible ? 'text' : 'password'\"\n            id=\"confirmPassword\"\n            v-model=\"registerForm.confirmPassword\"\n            placeholder=\"Xác nhận mật khẩu\"\n            required\n          />\n          <span\n            class=\"toggle-password\"\n            @click=\"toggleConfirmPasswordVisibility\"\n          >\n            <font-awesome-icon\n              :icon=\"isConfirmPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn-submit\">Đăng ký</button>\n\n      <div class=\"divider\">HOẶC</div>\n\n      <div class=\"social-login\">\n        <button\n          type=\"button\"\n          class=\"btn-social btn-facebook\"\n          @click=\"handleFacebookLogin\"\n        >\n          <img\n            src=\"https://cdn.freebiesupply.com/logos/large/2x/facebook-3-logo-png-transparent.png\"\n            class=\"social-icon\"\n            alt=\"Facebook Logo\"\n          />\n          Facebook\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn-social btn-google\"\n          @click=\"handleGoogleLogin\"\n        >\n          <img\n            src=\"https://www.pngall.com/wp-content/uploads/13/Google-Logo.png\"\n            class=\"social-icon\"\n            alt=\"Google Logo\"\n          />\n          Google\n        </button>\n      </div>\n\n      <div class=\"form-footer\">\n        <p>\n          Đã có tài khoản?\n          <router-link to=\"/login\">Đăng nhập</router-link>\n        </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\"; // Sử dụng axios để gọi API\n\nconst registerForm = ref({\n  fullname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n});\n\nconst isPasswordVisible = ref(false);\nconst isConfirmPasswordVisible = ref(false);\n\nconst router = useRouter();\n\nconst handleRegister = async () => {\n  if (\n    registerForm.value.password === registerForm.value.confirmPassword &&\n    registerForm.value.username &&\n    registerForm.value.email &&\n    registerForm.value.fullname\n  ) {\n    try {\n      // Gọi API tới server\n      const response = await axios.post(\"http://localhost:3000/user/register\", {\n        FULLNAME: registerForm.value.fullname,\n        EMAIL: registerForm.value.email,\n        USERNAME: registerForm.value.username,\n        PASSWORD: registerForm.value.password,\n        // confirmPassword: registerForm.value.confirmPassword,\n      });\n\n      if (response.status === 201) {\n        // Đăng ký thành công, chuyển hướng sang trang đăng nhập\n        console.log(\"Đăng ký thành công:\", response.data);\n        router.push(\"/login\");\n      }\n    } catch (error) {\n      // Xử lý lỗi từ server (ví dụ: tên đăng nhập hoặc email đã tồn tại)\n      if (error.response && error.response.data.errors) {\n        const errors = error.response.data.errors;\n        console.error(\"Lỗi:\", errors);\n        alert(\"Lỗi đăng ký: \" + (errors.USERNAME || errors.EMAIL || errors.general || \"Vui lòng thử lại sau\"));\n      } else {\n        console.error(\"Lỗi không xác định:\", error);\n        alert(\"Lỗi không xác định, vui lòng thử lại sau.\");\n      }\n    }\n  } else {\n    alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu khớp nhau\");\n  }\n};\n\nconst togglePasswordVisibility = () => {\n  isPasswordVisible.value = !isPasswordVisible.value;\n};\n\nconst toggleConfirmPasswordVisibility = () => {\n  isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n};\n\nconst handleFacebookLogin = () => {\n  console.log(\"Login with Facebook\");\n  // Thêm logic đăng nhập qua Facebook\n};\n\nconst handleGoogleLogin = () => {\n  console.log(\"Login with Google\");\n  // Thêm logic đăng nhập qua Google\n};\n</script>\n\n\n<style scoped>\n.register-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.register-title {\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: #ee4d2d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  position: relative;\n  width: 48%;\n}\n\n.form-group.full-width {\n  width: 100%;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 14px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 16px;\n}\n\n.toggle-password {\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 14px;\n  background: #ee4d2d;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: background 0.3s;\n}\n\n.btn-submit:hover {\n  background: #ff6347;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n  color: #888;\n  margin: 20px 0;\n}\n\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #ddd;\n  margin: 0 10px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.btn-social {\n  width: 48%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: #333;\n  transition: all 0.3s ease;\n}\n\n.social-icon {\n  margin-right: 10px;\n  width: 24px;\n  height: 24px;\n}\n\n.btn-facebook {\n  color: #3b5998;\n  border-color: #3b5998;\n}\n\n.btn-google {\n  color: #db4437;\n  border-color: #db4437;\n}\n\n.btn-facebook:hover {\n  background-color: #3b5998;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437;\n  color: white;\n}\n\n.form-footer {\n  margin-top: 25px;\n  text-align: center;\n}\n\n.form-footer p {\n  font-size: 14px;\n}\n\n@media (max-width: 600px) {\n  .register-container {\n    max-width: 100%;\n    margin: 20px;\n    padding: 20px;\n  }\n\n  .form-row {\n    flex-direction: column;\n  }\n\n  .form-group,\n  .form-group.full-width {\n    width: 100%;\n    margin-bottom: 15px;\n  }\n}\n</style>\n"],"mappings":"AAkHA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;;;;;;;IAE3B,MAAMC,YAAY,GAAGH,GAAG,CAAC;MACvBI,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,MAAMC,iBAAiB,GAAGT,GAAG,CAAC,KAAK,CAAC;IACpC,MAAMU,wBAAwB,GAAGV,GAAG,CAAC,KAAK,CAAC;IAE3C,MAAMW,MAAM,GAAGV,SAAS,CAAC,CAAC;IAE1B,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IACET,YAAY,CAACU,KAAK,CAACN,QAAQ,KAAKJ,YAAY,CAACU,KAAK,CAACL,eAAe,IAClEL,YAAY,CAACU,KAAK,CAACP,QAAQ,IAC3BH,YAAY,CAACU,KAAK,CAACR,KAAK,IACxBF,YAAY,CAACU,KAAK,CAACT,QAAQ,EAC3B;QACA,IAAI;UACF;UACA,MAAMU,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,qCAAqC,EAAE;YACvEC,QAAQ,EAAEb,YAAY,CAACU,KAAK,CAACT,QAAQ;YACrCa,KAAK,EAAEd,YAAY,CAACU,KAAK,CAACR,KAAK;YAC/Ba,QAAQ,EAAEf,YAAY,CAACU,KAAK,CAACP,QAAQ;YACrCa,QAAQ,EAAEhB,YAAY,CAACU,KAAK,CAACN;YAC7B;UACF,CAAC,CAAC;UAEF,IAAIO,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;YAC3B;YACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,QAAQ,CAACS,IAAI,CAAC;YACjDZ,MAAM,CAACa,IAAI,CAAC,QAAQ,CAAC;UACvB;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd;UACA,IAAIA,KAAK,CAACX,QAAQ,IAAIW,KAAK,CAACX,QAAQ,CAACS,IAAI,CAACG,MAAM,EAAE;YAChD,MAAMA,MAAM,GAAGD,KAAK,CAACX,QAAQ,CAACS,IAAI,CAACG,MAAM;YACzCL,OAAO,CAACI,KAAK,CAAC,MAAM,EAAEC,MAAM,CAAC;YAC7BC,KAAK,CAAC,eAAe,IAAID,MAAM,CAACR,QAAQ,IAAIQ,MAAM,CAACT,KAAK,IAAIS,MAAM,CAACE,OAAO,IAAI,sBAAsB,CAAC,CAAC;UACxG,CAAC,MAAM;YACLP,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;YAC3CE,KAAK,CAAC,2CAA2C,CAAC;UACpD;QACF;MACF,CAAC,MAAM;QACLA,KAAK,CAAC,8DAA8D,CAAC;MACvE;IACF,CAAC;IAED,MAAME,wBAAwB,GAAGA,CAAA,KAAM;MACrCpB,iBAAiB,CAACI,KAAK,GAAG,CAACJ,iBAAiB,CAACI,KAAK;IACpD,CAAC;IAED,MAAMiB,+BAA+B,GAAGA,CAAA,KAAM;MAC5CpB,wBAAwB,CAACG,KAAK,GAAG,CAACH,wBAAwB,CAACG,KAAK;IAClE,CAAC;IAED,MAAMkB,mBAAmB,GAAGA,CAAA,KAAM;MAChCV,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;IACF,CAAC;IAED,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;MAC9BX,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}