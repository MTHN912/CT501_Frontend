{"ast":null,"code":"import axios from \"axios\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const registerForm = ref({\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      // confirmPassword: \"\",\n      otp: \"\" // Thêm trường OTP\n    });\n    const isPasswordVisible = ref(false);\n    const isConfirmPasswordVisible = ref(false);\n    const isOTPRequested = ref(false); // Biến kiểm soát hiển thị OTP\n\n    const router = useRouter();\n\n    // Hàm xử lý đăng ký\n    const handleRegister = async () => {\n      if (registerForm.value.password === registerForm.value.confirmPassword) {\n        try {\n          const response = await axios.post(\"http://localhost:3000/user/register\", {\n            FULLNAME: registerForm.value.fullname,\n            EMAIL: registerForm.value.email,\n            USERNAME: registerForm.value.username,\n            PASSWORD: registerForm.value.password\n          });\n          if (response.status === 201) {\n            isOTPRequested.value = true; // Hiển thị trường OTP\n            Swal.fire({\n              title: \"Đăng ký thành công!\",\n              text: \"Vui lòng kiểm tra email để nhận mã OTP.\",\n              icon: \"success\"\n            });\n          }\n        } catch (error) {\n          console.error(\"Lỗi đăng ký:\", error);\n          alert(\"Lỗi đăng ký, vui lòng thử lại.\");\n        }\n      } else {\n        alert(\"Mật khẩu không khớp.\");\n      }\n    };\n\n    // Hàm xử lý xác thực OTP\n    const handleVerifyOTP = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:3000/user/verifyOTPAndActivateUser\", {\n          OTP: registerForm.value.otp,\n          EMAIL: registerForm.value.email\n        });\n        if (response.status === 200) {\n          Swal.fire({\n            title: \"Xác thực thành công!\",\n            text: \"Tài khoản của bạn đã được kích hoạt.\",\n            icon: \"success\",\n            confirmButtonText: \"Đăng nhập\"\n          }).then(() => {\n            router.push(\"/login\");\n          });\n        }\n      } catch (error) {\n        console.error(\"Lỗi xác thực OTP:\", error);\n        Swal.fire({\n          title: \"Lỗi\",\n          text: \"Mã OTP không chính xác. Vui lòng thử lại.\",\n          icon: \"error\"\n        });\n      }\n    };\n    const togglePasswordVisibility = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const toggleConfirmPasswordVisibility = () => {\n      isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n    };\n    const handleFacebookLogin = () => {\n      console.log(\"Login with Facebook\");\n      // Thêm logic đăng nhập qua Facebook\n    };\n    const handleGoogleLogin = () => {\n      console.log(\"Login with Google\");\n      // Thêm logic đăng nhập qua Google\n    };\n    const __returned__ = {\n      registerForm,\n      isPasswordVisible,\n      isConfirmPasswordVisible,\n      isOTPRequested,\n      router,\n      handleRegister,\n      handleVerifyOTP,\n      togglePasswordVisibility,\n      toggleConfirmPasswordVisibility,\n      handleFacebookLogin,\n      handleGoogleLogin,\n      get axios() {\n        return axios;\n      },\n      get Swal() {\n        return Swal;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","Swal","ref","useRouter","registerForm","fullname","email","username","password","otp","isPasswordVisible","isConfirmPasswordVisible","isOTPRequested","router","handleRegister","value","confirmPassword","response","post","FULLNAME","EMAIL","USERNAME","PASSWORD","status","fire","title","text","icon","error","console","alert","handleVerifyOTP","OTP","confirmButtonText","then","push","togglePasswordVisibility","toggleConfirmPasswordVisibility","handleFacebookLogin","log","handleGoogleLogin"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Đăng Ký</h2>\n\n    <form\n      @submit.prevent=\"isOTPRequested ? handleVerifyOTP : handleRegister\"\n      class=\"register-form\"\n    >\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"fullname\"\n            v-model=\"registerForm.fullname\"\n            placeholder=\"Họ và tên\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"registerForm.email\"\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"registerForm.username\"\n            placeholder=\"Tên tài khoản\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            :type=\"isPasswordVisible ? 'text' : 'password'\"\n            id=\"password\"\n            v-model=\"registerForm.password\"\n            placeholder=\"Mật khẩu\"\n            required\n          />\n          <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n            <font-awesome-icon\n              :icon=\"isPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <!-- Trường OTP, chỉ hiển thị nếu isOTPRequested là true -->\n      <div v-if=\"isOTPRequested\" class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <input\n            type=\"text\"\n            id=\"otp\"\n            v-model=\"registerForm.otp\"\n            placeholder=\"Nhập mã OTP\"\n            required\n          />\n        </div>\n      </div>\n\n      <button type=\"submit\" class=\"btn-submit\">\n        {{ isOTPRequested ? \"Xác Thực\" : \"Đăng Ký\" }}\n      </button>\n\n      <div class=\"divider\">HOẶC</div>\n\n      <div class=\"social-login\">\n        <button\n          type=\"button\"\n          class=\"btn-social btn-facebook\"\n          @click=\"handleFacebookLogin\"\n        >\n          <img\n            src=\"https://cdn.freebiesupply.com/logos/large/2x/facebook-3-logo-png-transparent.png\"\n            class=\"social-icon\"\n            alt=\"Facebook Logo\"\n          />\n          Facebook\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn-social btn-google\"\n          @click=\"handleGoogleLogin\"\n        >\n          <img\n            src=\"https://www.pngall.com/wp-content/uploads/13/Google-Logo.png\"\n            class=\"social-icon\"\n            alt=\"Google Logo\"\n          />\n          Google\n        </button>\n      </div>\n\n      <div class=\"form-footer\">\n        <p>\n          Đã có tài khoản?\n          <router-link to=\"/login\">Đăng nhập</router-link>\n        </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst registerForm = ref({\n  fullname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  // confirmPassword: \"\",\n  otp: \"\", // Thêm trường OTP\n});\n\nconst isPasswordVisible = ref(false);\nconst isConfirmPasswordVisible = ref(false);\nconst isOTPRequested = ref(false); // Biến kiểm soát hiển thị OTP\n\nconst router = useRouter();\n\n// Hàm xử lý đăng ký\nconst handleRegister = async () => {\n  if (registerForm.value.password === registerForm.value.confirmPassword) {\n    try {\n      const response = await axios.post(\"http://localhost:3000/user/register\", {\n        FULLNAME: registerForm.value.fullname,\n        EMAIL: registerForm.value.email,\n        USERNAME: registerForm.value.username,\n        PASSWORD: registerForm.value.password,\n      });\n\n      if (response.status === 201) {\n        isOTPRequested.value = true; // Hiển thị trường OTP\n        Swal.fire({\n          title: \"Đăng ký thành công!\",\n          text: \"Vui lòng kiểm tra email để nhận mã OTP.\",\n          icon: \"success\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Lỗi đăng ký:\", error);\n      alert(\"Lỗi đăng ký, vui lòng thử lại.\");\n    }\n  } else {\n    alert(\"Mật khẩu không khớp.\");\n  }\n};\n\n// Hàm xử lý xác thực OTP\nconst handleVerifyOTP = async () => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:3000/user/verifyOTPAndActivateUser\",\n      {\n        OTP: registerForm.value.otp,\n        EMAIL: registerForm.value.email,\n      }\n    );\n\n    if (response.status === 200) {\n      Swal.fire({\n        title: \"Xác thực thành công!\",\n        text: \"Tài khoản của bạn đã được kích hoạt.\",\n        icon: \"success\",\n        confirmButtonText: \"Đăng nhập\",\n      }).then(() => {\n        router.push(\"/login\");\n      });\n    }\n  } catch (error) {\n    console.error(\"Lỗi xác thực OTP:\", error);\n    Swal.fire({\n      title: \"Lỗi\",\n      text: \"Mã OTP không chính xác. Vui lòng thử lại.\",\n      icon: \"error\",\n    });\n  }\n};\n\nconst togglePasswordVisibility = () => {\n  isPasswordVisible.value = !isPasswordVisible.value;\n};\n\nconst toggleConfirmPasswordVisibility = () => {\n  isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n};\n\nconst handleFacebookLogin = () => {\n  console.log(\"Login with Facebook\");\n  // Thêm logic đăng nhập qua Facebook\n};\n\nconst handleGoogleLogin = () => {\n  console.log(\"Login with Google\");\n  // Thêm logic đăng nhập qua Google\n};\n</script>\n\n<style scoped>\n.register-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.register-title {\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: #ee4d2d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  position: relative;\n  width: 48%;\n}\n\n.form-group.full-width {\n  width: 100%;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 14px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 16px;\n}\n\n.toggle-password {\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 14px;\n  background: #ee4d2d;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: background 0.3s;\n}\n\n.btn-submit:hover {\n  background: #ff6347;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n  color: #888;\n  margin: 20px 0;\n}\n\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #ddd;\n  margin: 0 10px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.btn-social {\n  width: 48%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: #333;\n  transition: all 0.3s ease;\n}\n\n.social-icon {\n  margin-right: 10px;\n  width: 24px;\n  height: 24px;\n}\n\n.btn-facebook {\n  color: #3b5998;\n  border-color: #3b5998;\n}\n\n.btn-google {\n  color: #db4437;\n  border-color: #db4437;\n}\n\n.btn-facebook:hover {\n  background-color: #3b5998;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437;\n  color: white;\n}\n\n.form-footer {\n  margin-top: 25px;\n  text-align: center;\n}\n\n.form-footer p {\n  font-size: 14px;\n}\n\n@media (max-width: 600px) {\n  .register-container {\n    max-width: 100%;\n    margin: 20px;\n    padding: 20px;\n  }\n\n  .form-row {\n    flex-direction: column;\n  }\n\n  .form-group,\n  .form-group.full-width {\n    width: 100%;\n    margin-bottom: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}