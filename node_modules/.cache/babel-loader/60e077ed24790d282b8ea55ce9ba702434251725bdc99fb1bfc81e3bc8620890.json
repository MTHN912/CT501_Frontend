{"ast":null,"code":"import axios from \"axios\"; // Import axios\n\nexport default {\n  name: \"DishList\",\n  data() {\n    return {\n      selectedCategory: \"Tất cả\",\n      showCategories: true,\n      categories: [],\n      // Danh mục lấy từ API\n      dishes: [],\n      // Danh sách món ăn lấy từ API\n      ratings: {}\n    };\n  },\n  computed: {\n    // Lọc món ăn dựa trên danh mục được chọn\n    filteredDishes() {\n      if (this.selectedCategory === \"Tất cả\") {\n        return this.dishes;\n      }\n      return this.dishes.filter(dish => dish.category === this.selectedCategory);\n    },\n    // Tổng số lượng món trong giỏ hàng\n    cartTotalQuantity() {\n      return this.$store.state.cart.items.reduce((total, item) => total + item.quantity, 0);\n    },\n    // Truy cập giỏ hàng từ store\n    cart() {\n      return this.$store.state.cart;\n    }\n  },\n  methods: {\n    // Lọc món ăn theo danh mục\n    filterByCategory(category) {\n      this.selectedCategory = category;\n\n      // Cuộn danh sách món ăn về đầu trang khi chọn danh mục mới\n      const dishList = this.$el.querySelector(\".dish-list\");\n      if (dishList) {\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n    },\n    // Điều hướng đến trang chi tiết món ăn\n    goToDetail(id) {\n      this.$router.push({\n        name: \"DishDetail\",\n        params: {\n          id: id\n        }\n      });\n    },\n    // Hiện/Ẩn danh sách danh mục\n    toggleCategory() {\n      this.showCategories = !this.showCategories;\n    },\n    // Thêm món vào giỏ hàng thông qua store\n    selectDish(dish) {\n      this.$store.dispatch(\"addToCart\", {\n        dishId: dish._id,\n        quantity: dish.quantity || 1 // Số lượng mặc định là 1 nếu không có\n      }).then(() => {\n        alert(`Bạn muốn thêm ${dish.quantity || 1} món ${dish.name} vào giỏ hàng`);\n      }).catch(error => {\n        console.error(\"Lỗi khi thêm món vào giỏ hàng:\", error);\n      });\n    },\n    // Lấy giỏ hàng từ store\n    fetchCart() {\n      this.$store.dispatch(\"fetchCart\").then(() => {\n        console.log(\"Giỏ hàng đã được tải thành công\");\n      }).catch(error => {\n        console.error(\"Lỗi khi tải giỏ hàng:\", error);\n      });\n    },\n    // Điều hướng đến trang giỏ hàng\n    goToCart() {\n      this.$router.push({\n        name: \"Cart\"\n      });\n    },\n    // Yêu thích món ăn\n    toggleFavorite(dish) {\n      dish.favorite = !dish.favorite;\n    },\n    // Gọi API để lấy danh mục món ăn\n    async fetchCategories() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/category/getCategory\");\n        this.categories = response.data.map(category => category.name);\n      } catch (error) {\n        console.error(\"Lỗi khi tải danh mục:\", error);\n      }\n    },\n    // Gọi API để lấy danh sách món ăn\n    async fetchDishes() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/dish/getDish\");\n        this.dishes = response.data;\n\n        // Gọi API để lấy đánh giá trung bình cho từng món ăn\n        for (const dish of this.dishes) {\n          const ratingResponse = await axios.get(`http://localhost:3000/review/getAverageRating/${dish._id}`);\n\n          // Lưu trữ kết quả vào ratings, đồng thời đổi tên thuộc tính cho phù hợp với template\n          this.ratings[dish._id] = {\n            averageRating: parseFloat(ratingResponse.data.average),\n            // Đổi thành số thực\n            reviewCount: ratingResponse.data.totalReviews\n          };\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi tải danh sách món ăn:\", error);\n      }\n    }\n  },\n  mounted() {\n    // Gọi API khi component được mount\n    this.fetchCategories();\n    this.fetchDishes();\n    this.fetchCart(); // Lấy giỏ hàng từ store khi component mount\n  }\n};","map":{"version":3,"names":["axios","name","data","selectedCategory","showCategories","categories","dishes","ratings","computed","filteredDishes","filter","dish","category","cartTotalQuantity","$store","state","cart","items","reduce","total","item","quantity","methods","filterByCategory","dishList","$el","querySelector","window","scrollTo","top","behavior","goToDetail","id","$router","push","params","toggleCategory","selectDish","dispatch","dishId","_id","then","alert","catch","error","console","fetchCart","log","goToCart","toggleFavorite","favorite","fetchCategories","response","get","map","fetchDishes","ratingResponse","averageRating","parseFloat","average","reviewCount","totalReviews","mounted"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\DishList.vue"],"sourcesContent":["<template>\r\n  <div class=\"menu-container\">\r\n    <!-- Danh mục món ăn -->\r\n    <aside class=\"category-list\">\r\n      <h3 @click=\"toggleCategory\">\r\n        Danh mục<span v-if=\"!showCategories\">▼</span><span v-else>▲</span>\r\n      </h3>\r\n      <ul v-show=\"showCategories\">\r\n        <li\r\n          @click=\"filterByCategory('Tất cả')\"\r\n          :class=\"{ active: selectedCategory === 'Tất cả' }\"\r\n        >\r\n          Tất cả\r\n        </li>\r\n        <li\r\n          v-for=\"category in categories\"\r\n          :key=\"category\"\r\n          @click=\"filterByCategory(category)\"\r\n          :class=\"{ active: selectedCategory === category }\"\r\n        >\r\n          {{ category }}\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n\r\n    <!-- Danh sách món ăn -->\r\n    <div class=\"dish-list\">\r\n      <h2 class=\"title\">Danh sách món ăn</h2>\r\n      <ul class=\"dish-grid\">\r\n        <li v-for=\"dish in filteredDishes\" :key=\"dish.id\" class=\"dish-item\">\r\n          <div class=\"dish-info\">\r\n            <img\r\n              :src=\"dish.image\"\r\n              alt=\"dish image\"\r\n              class=\"dish-image\"\r\n              @click=\"goToDetail(dish._id)\"\r\n            />\r\n            <div class=\"dish-details\">\r\n              <h3 @click=\"goToDetail(dish._id)\">{{ dish.name }}</h3>\r\n              <p>{{ dish.description }}</p>\r\n              <p>{{ dish.detailedDescription }}</p>\r\n              <span>Giá: {{ dish.price }} đ</span>\r\n\r\n              <!-- Nút yêu thích và đánh giá -->\r\n              <div class=\"dish-controls\">\r\n                <div class=\"dish-rating\">\r\n                  <!-- Kiểm tra nếu có dữ liệu đánh giá cho món ăn -->\r\n                  <span\r\n                    v-if=\"\r\n                      ratings[dish._id] && ratings[dish._id].reviewCount > 0\r\n                    \"\r\n                  >\r\n                    <!-- Hiển thị điểm đánh giá trung bình -->\r\n                    <span class=\"average-rating\">{{\r\n                      ratings[dish._id].averageRating.toFixed(1)\r\n                    }}</span>\r\n\r\n                    <!-- Hiển thị số sao dựa trên đánh giá trung bình -->\r\n                    <span class=\"stars\">\r\n                      <span\r\n                        v-for=\"n in 5\"\r\n                        :key=\"n\"\r\n                        class=\"star\"\r\n                        :class=\"{\r\n                          filled:\r\n                            n <= Math.round(ratings[dish._id].averageRating),\r\n                        }\"\r\n                        >★</span\r\n                      >\r\n                    </span>\r\n\r\n                    <!-- Hiển thị số lượt đánh giá -->\r\n                    <span class=\"review-count\"\r\n                      >| {{ ratings[dish._id].reviewCount }} đánh giá</span\r\n                    >\r\n                  </span>\r\n                  <span v-else>Chưa có đánh giá</span>\r\n                </div>\r\n\r\n                <!-- Nút yêu thích -->\r\n                <button @click=\"toggleFavorite(dish)\" class=\"favorite-button\">\r\n                  <i\r\n                    :class=\"dish.favorite ? 'fas fa-heart' : 'far fa-heart'\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </button>\r\n              </div>\r\n\r\n              <!-- Số lượng và nút chọn món -->\r\n              <div class=\"quantity-input\">\r\n                <label for=\"quantity\">Số lượng:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"quantity\"\r\n                  v-model=\"dish.quantity\"\r\n                  min=\"1\"\r\n                  class=\"quantity-field\"\r\n                />\r\n              </div>\r\n              <button @click=\"selectDish(dish)\" class=\"select-button\">\r\n                Chọn món\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"; // Import axios\r\n\r\nexport default {\r\n  name: \"DishList\",\r\n  data() {\r\n    return {\r\n      selectedCategory: \"Tất cả\",\r\n      showCategories: true,\r\n      categories: [], // Danh mục lấy từ API\r\n      dishes: [], // Danh sách món ăn lấy từ API\r\n      ratings: {},\r\n    };\r\n  },\r\n  computed: {\r\n    // Lọc món ăn dựa trên danh mục được chọn\r\n    filteredDishes() {\r\n      if (this.selectedCategory === \"Tất cả\") {\r\n        return this.dishes;\r\n      }\r\n      return this.dishes.filter(\r\n        (dish) => dish.category === this.selectedCategory\r\n      );\r\n    },\r\n    // Tổng số lượng món trong giỏ hàng\r\n    cartTotalQuantity() {\r\n      return this.$store.state.cart.items.reduce(\r\n        (total, item) => total + item.quantity,\r\n        0\r\n      );\r\n    },\r\n    // Truy cập giỏ hàng từ store\r\n    cart() {\r\n      return this.$store.state.cart;\r\n    },\r\n  },\r\n  methods: {\r\n    // Lọc món ăn theo danh mục\r\n    filterByCategory(category) {\r\n      this.selectedCategory = category;\r\n\r\n      // Cuộn danh sách món ăn về đầu trang khi chọn danh mục mới\r\n      const dishList = this.$el.querySelector(\".dish-list\");\r\n      if (dishList) {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      }\r\n    },\r\n    // Điều hướng đến trang chi tiết món ăn\r\n    goToDetail(id) {\r\n      this.$router.push({ name: \"DishDetail\", params: { id: id } });\r\n    },\r\n    // Hiện/Ẩn danh sách danh mục\r\n    toggleCategory() {\r\n      this.showCategories = !this.showCategories;\r\n    },\r\n    // Thêm món vào giỏ hàng thông qua store\r\n    selectDish(dish) {\r\n      this.$store\r\n        .dispatch(\"addToCart\", {\r\n          dishId: dish._id,\r\n          quantity: dish.quantity || 1, // Số lượng mặc định là 1 nếu không có\r\n        })\r\n        .then(() => {\r\n          alert(\r\n            `Bạn muốn thêm ${dish.quantity || 1} món ${dish.name} vào giỏ hàng`\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Lỗi khi thêm món vào giỏ hàng:\", error);\r\n        });\r\n    },\r\n    // Lấy giỏ hàng từ store\r\n    fetchCart() {\r\n      this.$store\r\n        .dispatch(\"fetchCart\")\r\n        .then(() => {\r\n          console.log(\"Giỏ hàng đã được tải thành công\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Lỗi khi tải giỏ hàng:\", error);\r\n        });\r\n    },\r\n    // Điều hướng đến trang giỏ hàng\r\n    goToCart() {\r\n      this.$router.push({ name: \"Cart\" });\r\n    },\r\n    // Yêu thích món ăn\r\n    toggleFavorite(dish) {\r\n      dish.favorite = !dish.favorite;\r\n    },\r\n    // Gọi API để lấy danh mục món ăn\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:3000/category/getCategory\"\r\n        );\r\n        this.categories = response.data.map((category) => category.name);\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải danh mục:\", error);\r\n      }\r\n    },\r\n    // Gọi API để lấy danh sách món ăn\r\n    async fetchDishes() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/dish/getDish\");\r\n        this.dishes = response.data;\r\n\r\n        // Gọi API để lấy đánh giá trung bình cho từng món ăn\r\n        for (const dish of this.dishes) {\r\n          const ratingResponse = await axios.get(\r\n            `http://localhost:3000/review/getAverageRating/${dish._id}`\r\n          );\r\n\r\n          // Lưu trữ kết quả vào ratings, đồng thời đổi tên thuộc tính cho phù hợp với template\r\n          this.ratings[dish._id] = {\r\n            averageRating: parseFloat(ratingResponse.data.average), // Đổi thành số thực\r\n            reviewCount: ratingResponse.data.totalReviews,\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi tải danh sách món ăn:\", error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // Gọi API khi component được mount\r\n    this.fetchCategories();\r\n    this.fetchDishes();\r\n    this.fetchCart(); // Lấy giỏ hàng từ store khi component mount\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.menu-container {\r\n  display: flex;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.category-list {\r\n  width: 220px;\r\n  margin-right: 25px;\r\n  position: sticky;\r\n  top: 20px;\r\n  max-height: 100vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.category-list h3 {\r\n  cursor: pointer;\r\n  background-color: #f8f8f8;\r\n  padding: 10px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.category-list h3:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.category-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 10px;\r\n}\r\n\r\n.category-list li {\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.category-list li.active {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n}\r\n\r\n.category-list li:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.dish-list {\r\n  flex: 1;\r\n}\r\n\r\n.title {\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.dish-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 35px;\r\n}\r\n\r\n.dish-item {\r\n  border: 1px solid #ddd;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n}\r\n\r\n.dish-item:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.dish-info {\r\n  text-align: center;\r\n}\r\n\r\n.dish-image {\r\n  width: 300px;\r\n  height: 300px;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n}\r\n\r\n.dish-details p {\r\n  margin: 5px 0;\r\n  color: #666;\r\n  max-height: 60px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.dish-details h3 {\r\n  font-size: 1.6rem;\r\n  color: #333;\r\n  font-weight: bold;\r\n  max-height: 40px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.dish-details span {\r\n  font-weight: bold;\r\n  color: #000;\r\n  margin-top: 10px;\r\n  display: block;\r\n}\r\n\r\n.dish-controls {\r\n  display: flex;\r\n  justify-content: space-between; /* Giữ các phần tử ở hai đầu */\r\n  align-items: center;\r\n  margin-top: 15px;\r\n}\r\n\r\n.dish-rating {\r\n  display: inline-flex; /* Chuyển sang inline-flex để các thành phần xếp liền nhau */\r\n  align-items: center;  /* Căn giữa theo trục dọc */\r\n  justify-content: flex-start; /* Bắt đầu từ bên trái */\r\n  gap: 5px; /* Thêm khoảng cách giữa các phần tử con (ngôi sao, số đánh giá) */\r\n}\r\n\r\n.average-rating {\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.stars {\r\n  display: flex; /* Đảm bảo rằng các ngôi sao được hiển thị theo hàng ngang */\r\n  flex-direction: row; /* Hướng sắp xếp là hàng ngang */\r\n  align-items: center; /* Căn giữa các ngôi sao theo chiều dọc */\r\n  margin-right: 5px;\r\n  white-space: nowrap;\r\n  display: inline-flex; /* Sử dụng inline-flex để các ngôi sao nằm ngang */\r\n  justify-content: flex-start;\r\n}\r\n\r\n.star {\r\n  font-size: 1.5rem;\r\n  color: #ddd;\r\n  margin-right: 5px;\r\n}\r\n\r\n.star.filled {\r\n  color: gold;\r\n}\r\n\r\n.review-count {\r\n  font-size: 1rem;\r\n  margin-left: 5px;\r\n}\r\n\r\n.favorite-button {\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  color: red;\r\n  margin-left: 5px;\r\n  transition: color 0.3s, transform 0.3s;\r\n}\r\n\r\n.favorite-button.active i {\r\n  color: red;\r\n}\r\n\r\n.favorite-button:hover i {\r\n  color: #ff6666;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.quantity-input {\r\n  margin-top: 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.quantity-field {\r\n  width: 60px;\r\n  padding: 5px;\r\n  margin-left: 10px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.select-button {\r\n  background-color: #ff6600;\r\n  color: white;\r\n  padding: 10px 25px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  margin-top: 15px;\r\n  transition: background-color 0.3s, transform 0.2s;\r\n  font-size: 1rem;\r\n}\r\n\r\n.select-button:hover {\r\n  background-color: #ff4500;\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}