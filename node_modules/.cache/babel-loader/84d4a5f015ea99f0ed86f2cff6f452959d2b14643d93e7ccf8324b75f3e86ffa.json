{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"DishDetail\",\n  props: [\"id\"],\n  data() {\n    return {\n      dish: null,\n      // Biến để lưu dữ liệu món ăn\n      error: null,\n      // Biến để lưu thông báo lỗi nếu có\n      quantity: 1,\n      average: 0,\n      // Lưu trung bình đánh giá\n      totalReviews: 0\n    };\n  },\n  created() {\n    this.fetchDishDetails(); // Gọi hàm lấy thông tin món ăn khi component được tạo\n  },\n  methods: {\n    async fetchDishDetails() {\n      const dishId = this.$route.params.id;\n      try {\n        const response = await axios.get(`http://localhost:3000/dish/getDishById/${dishId}`);\n        this.dish = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi tải thông tin món ăn:\", error);\n      }\n    },\n    toggleFavorite() {\n      this.dish.favorite = !this.dish.favorite;\n    },\n    selectDish() {\n      this.$store.dispatch(\"addToCart\", {\n        dishId: this.$route.params.id,\n        quantity: this.quantity // Lấy số lượng món từ input\n      }).then(() => {\n        alert(`Bạn đã thêm ${this.quantity} món ${this.dish.name} vào giỏ hàng`);\n      }).catch(error => {\n        console.error(\"Lỗi khi thêm món vào giỏ hàng:\", error);\n      });\n    }\n  },\n  created() {\n    this.fetchDishDetails();\n  }\n};","map":{"version":3,"names":["axios","name","props","data","dish","error","quantity","average","totalReviews","created","fetchDishDetails","methods","dishId","$route","params","id","response","get","console","toggleFavorite","favorite","selectDish","$store","dispatch","then","alert","catch"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\DishDetail.vue"],"sourcesContent":["<template>\n  <div class=\"dish-detail-container\" v-if=\"dish\">\n    <!-- Hình ảnh món ăn lớn bên trái -->\n    <div class=\"image-section\">\n      <img :src=\"dish.image\" alt=\"dish image\" class=\"dish-image\" />\n    </div>\n\n    <!-- Thông tin món ăn bên phải -->\n    <div class=\"info-section\">\n      <h2 class=\"dish-name\">{{ dish.name }}</h2>\n      <div class=\"location-info\">\n        <p>{{ dish.description }}</p>\n        <p>Danh mục: {{ dish.category }}</p>\n        <p>Mô tả: {{ dish.detailedDescription }}</p>\n        <p>\n          Giá: <strong>{{ dish.price }} VNĐ</strong>\n        </p>\n      </div>\n\n      <!-- Đánh giá món ăn -->\n      <div class=\"dish-rating\">\n        <span\n          v-for=\"n in 5\"\n          :key=\"n\"\n          class=\"star\"\n          :class=\"{ filled: n <= average }\"\n          >★</span\n        >\n        <span>({{ totalReviews || 0 }} đánh giá)</span>\n      </div>\n\n      <!-- Nút yêu thích -->\n      <button @click=\"toggleFavorite\" class=\"favorite-button\">\n        <i :class=\"dish.favorite ? 'fas fa-heart' : 'far fa-heart'\"></i>\n        <span>{{ dish.favorite ? \"Đã yêu thích\" : \"Yêu thích\" }}</span>\n      </button>\n\n      <!-- Nút chọn số lượng món -->\n      <div class=\"quantity-selector\">\n        <label for=\"quantity\">Số lượng: </label>\n        <input\n          type=\"number\"\n          id=\"quantity\"\n          v-model.number=\"quantity\"\n          min=\"1\"\n          :max=\"dish.stock || 10\"\n          step=\"1\"\n        />\n      </div>\n\n      <!-- Nút chọn món -->\n      <button @click=\"selectDish\" class=\"select-button\">Chọn món</button>\n    </div>\n  </div>\n  <div v-else>\n    <p>Đang tải thông tin món ăn...</p>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"DishDetail\",\n  props: [\"id\"],\n  data() {\n    return {\n      dish: null, // Biến để lưu dữ liệu món ăn\n      error: null, // Biến để lưu thông báo lỗi nếu có\n      quantity: 1,\n      average: 0, // Lưu trung bình đánh giá\n      totalReviews: 0,\n    };\n  },\n  created() {\n    this.fetchDishDetails(); // Gọi hàm lấy thông tin món ăn khi component được tạo\n  },\n  methods: {\n    async fetchDishDetails() {\n      const dishId = this.$route.params.id;\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/dish/getDishById/${dishId}`\n        );\n        this.dish = response.data;\n      } catch (error) {\n        console.error(\"Lỗi khi tải thông tin món ăn:\", error);\n      }\n    },\n    toggleFavorite() {\n      this.dish.favorite = !this.dish.favorite;\n    },\n    selectDish() {\n      this.$store\n        .dispatch(\"addToCart\", {\n          dishId: this.$route.params.id,\n          quantity: this.quantity, // Lấy số lượng món từ input\n        })\n        .then(() => {\n          alert(\n            `Bạn đã thêm ${this.quantity} món ${this.dish.name} vào giỏ hàng`\n          );\n        })\n        .catch((error) => {\n          console.error(\"Lỗi khi thêm món vào giỏ hàng:\", error);\n        });\n    },\n  },\n  created() {\n    this.fetchDishDetails();\n  },\n};\n</script>\n\n<style scoped>\n.dish-detail-container {\n  display: flex;\n  padding: 25px;\n  background-color: #fff;\n  max-width: 1300px;\n  margin: 0 auto;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  height: 500px;\n}\n\n.image-section {\n  flex: 1;\n}\n\n.dish-image {\n  width: 100%;\n  height: 300px; /* Đặt chiều cao cố định */\n  object-fit: cover; /* Giúp hình ảnh giữ tỷ lệ và cắt phần dư */\n  border-radius: 10px;\n}\n\n.info-section {\n  flex: 2;\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.dish-name {\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.location-info p {\n  margin: 5px 0;\n  font-size: 1.1rem;\n}\n\n.dish-rating {\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n}\n\n.star {\n  color: #ddd;\n  font-size: 1.5rem;\n  margin-right: 5px;\n}\n\n.star.filled {\n  color: gold;\n}\n\n.favorite-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  color: #ff6666;\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.favorite-button i {\n  margin-right: 5px;\n}\n\n.select-button {\n  background-color: #ff6600;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  transition: background-color 0.3s;\n}\n\n.select-button:hover {\n  background-color: #ff4500;\n}\n.quantity-selector {\n  margin-bottom: 10px;\n}\n\n.quantity-selector input {\n  width: 60px;\n  padding: 5px;\n  margin-left: 10px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n</style>\n"],"mappings":"AA4DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MAAE;MACZC,KAAK,EAAE,IAAI;MAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC;MAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,MAAME,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAC9B,0CAA0CL,MAAM,EAClD,CAAC;QACD,IAAI,CAACR,IAAG,GAAIY,QAAQ,CAACb,IAAI;MAC3B,EAAE,OAAOE,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDc,cAAcA,CAAA,EAAG;MACf,IAAI,CAACf,IAAI,CAACgB,QAAO,GAAI,CAAC,IAAI,CAAChB,IAAI,CAACgB,QAAQ;IAC1C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,MAAK,CACPC,QAAQ,CAAC,WAAW,EAAE;QACrBX,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QAC7BT,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAE;MAC3B,CAAC,EACAkB,IAAI,CAAC,MAAM;QACVC,KAAK,CACH,eAAe,IAAI,CAACnB,QAAQ,QAAQ,IAAI,CAACF,IAAI,CAACH,IAAI,eACpD,CAAC;MACH,CAAC,EACAyB,KAAK,CAAErB,KAAK,IAAK;QAChBa,OAAO,CAACb,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACN;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}