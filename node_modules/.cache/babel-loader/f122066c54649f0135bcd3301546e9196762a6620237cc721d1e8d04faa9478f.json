{"ast":null,"code":"import axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const registerForm = ref({\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\"\n      // confirmPassword: \"\",\n    });\n    const isPasswordVisible = ref(false);\n    const isConfirmPasswordVisible = ref(false);\n    const showOTPField = ref(false); // Điều khiển hiển thị trường OTP\n    const otp = ref(\"\"); // Lưu trữ mã OTP\n\n    const router = useRouter();\n    const handleRegister = async () => {\n      if (!showOTPField.value) {\n        // Bước 1: Đăng ký tài khoản\n        if (registerForm.value.password === registerForm.value.confirmPassword && registerForm.value.username && registerForm.value.email && registerForm.value.fullname) {\n          try {\n            const response = await axios.post(\"http://localhost:3000/user/register\", {\n              FULLNAME: registerForm.value.fullname,\n              EMAIL: registerForm.value.email,\n              USERNAME: registerForm.value.username,\n              PASSWORD: registerForm.value.password\n            });\n            if (response.status === 201) {\n              Swal.fire({\n                title: \"Đăng ký thành công!\",\n                text: \"Vui lòng nhập mã OTP được gửi qua email để xác thực.\",\n                icon: \"success\"\n              });\n              // Hiển thị trường OTP sau khi đăng ký thành công\n              showOTPField.value = true;\n            }\n          } catch (error) {\n            handleError(error);\n          }\n        } else {\n          alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu khớp nhau\");\n        }\n      } else {\n        // Bước 2: Xác thực OTP\n        try {\n          const response = await axios.post(\"http://localhost:3000/user/verifyOTPAndActivateUser\", {\n            EMAIL: registerForm.value.email,\n            OTP: otp.value\n          });\n          if (response.status === 200) {\n            Swal.fire({\n              title: \"Xác thực thành công!\",\n              text: \"Tài khoản của bạn đã được kích hoạt.\",\n              icon: \"success\"\n            }).then(() => {\n              router.push(\"/login\");\n            });\n          }\n        } catch (error) {\n          Swal.fire({\n            title: \"Lỗi\",\n            text: \"Mã OTP không đúng. Vui lòng thử lại.\",\n            icon: \"error\"\n          });\n        }\n      }\n    };\n    const togglePasswordVisibility = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n    };\n    const toggleConfirmPasswordVisibility = () => {\n      isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n    };\n    const handleFacebookLogin = () => {\n      console.log(\"Login with Facebook\");\n    };\n    const handleGoogleLogin = () => {\n      console.log(\"Login with Google\");\n    };\n    const handleError = error => {\n      if (error.response && error.response.data.errors) {\n        const errors = error.response.data.errors;\n        alert(\"Lỗi đăng ký: \" + (errors.USERNAME || errors.EMAIL || errors.general || \"Vui lòng thử lại sau\"));\n      } else {\n        alert(\"Lỗi không xác định, vui lòng thử lại sau.\");\n      }\n    };\n    const __returned__ = {\n      registerForm,\n      isPasswordVisible,\n      isConfirmPasswordVisible,\n      showOTPField,\n      otp,\n      router,\n      handleRegister,\n      togglePasswordVisibility,\n      toggleConfirmPasswordVisibility,\n      handleFacebookLogin,\n      handleGoogleLogin,\n      handleError,\n      get axios() {\n        return axios;\n      },\n      get Swal() {\n        return Swal;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","Swal","ref","useRouter","registerForm","fullname","email","username","password","isPasswordVisible","isConfirmPasswordVisible","showOTPField","otp","router","handleRegister","value","confirmPassword","response","post","FULLNAME","EMAIL","USERNAME","PASSWORD","status","fire","title","text","icon","error","handleError","alert","OTP","then","push","togglePasswordVisibility","toggleConfirmPasswordVisibility","handleFacebookLogin","console","log","handleGoogleLogin","data","errors","general"],"sources":["D:/Tiểu Luận Tốt Nghiệp/Frontend/src/components/Login-Logout/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <h2 class=\"register-title\">Đăng Ký</h2>\n\n    <form @submit.prevent=\"handleRegister\" class=\"register-form\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"fullname\"\n            v-model=\"registerForm.fullname\"\n            placeholder=\"Họ và tên\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"registerForm.email\"\n            placeholder=\"Email\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            v-model=\"registerForm.username\"\n            placeholder=\"Tên tài khoản\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            :type=\"isPasswordVisible ? 'text' : 'password'\"\n            id=\"password\"\n            v-model=\"registerForm.password\"\n            placeholder=\"Mật khẩu\"\n            required\n          />\n          <span class=\"toggle-password\" @click=\"togglePasswordVisibility\">\n            <font-awesome-icon\n              :icon=\"isPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group full-width\">\n          <input\n            :type=\"isConfirmPasswordVisible ? 'text' : 'password'\"\n            id=\"confirmPassword\"\n            v-model=\"registerForm.confirmPassword\"\n            placeholder=\"Xác nhận mật khẩu\"\n            required\n          />\n          <span\n            class=\"toggle-password\"\n            @click=\"toggleConfirmPasswordVisibility\"\n          >\n            <font-awesome-icon\n              :icon=\"isConfirmPasswordVisible ? 'eye-slash' : 'eye'\"\n            />\n          </span>\n        </div>\n      </div>\n\n      <!-- Trường OTP ẩn ban đầu, chỉ hiển thị sau khi đăng ký -->\n      <div class=\"form-row\" v-if=\"showOTPField\">\n        <div class=\"form-group full-width\">\n          <input\n            type=\"text\"\n            id=\"otp\"\n            v-model=\"otp\"\n            placeholder=\"Nhập mã OTP\"\n            required\n          />\n        </div>\n      </div>\n\n      <!-- Nút Đăng ký hoặc Xác thực -->\n      <button type=\"submit\" class=\"btn-submit\">\n        {{ showOTPField ? \"Xác thực\" : \"Đăng ký\" }}\n      </button>\n\n      <div class=\"divider\" v-if=\"!showOTPField\">HOẶC</div>\n\n      <div class=\"social-login\" v-if=\"!showOTPField\">\n        <button\n          type=\"button\"\n          class=\"btn-social btn-facebook\"\n          @click=\"handleFacebookLogin\"\n        >\n          <img\n            src=\"https://cdn.freebiesupply.com/logos/large/2x/facebook-3-logo-png-transparent.png\"\n            class=\"social-icon\"\n            alt=\"Facebook Logo\"\n          />\n          Facebook\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn-social btn-google\"\n          @click=\"handleGoogleLogin\"\n        >\n          <img\n            src=\"https://www.pngall.com/wp-content/uploads/13/Google-Logo.png\"\n            class=\"social-icon\"\n            alt=\"Google Logo\"\n          />\n          Google\n        </button>\n      </div>\n\n      <div class=\"form-footer\" v-if=\"!showOTPField\">\n        <p>\n          Đã có tài khoản?\n          <router-link to=\"/login\">Đăng nhập</router-link>\n        </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n\n<script setup>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nconst registerForm = ref({\n  fullname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  // confirmPassword: \"\",\n});\n\nconst isPasswordVisible = ref(false);\nconst isConfirmPasswordVisible = ref(false);\nconst showOTPField = ref(false); // Điều khiển hiển thị trường OTP\nconst otp = ref(\"\"); // Lưu trữ mã OTP\n\nconst router = useRouter();\n\nconst handleRegister = async () => {\n  if (!showOTPField.value) {\n    // Bước 1: Đăng ký tài khoản\n    if (\n      registerForm.value.password === registerForm.value.confirmPassword &&\n      registerForm.value.username &&\n      registerForm.value.email &&\n      registerForm.value.fullname\n    ) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/user/register\", {\n          FULLNAME: registerForm.value.fullname,\n          EMAIL: registerForm.value.email,\n          USERNAME: registerForm.value.username,\n          PASSWORD: registerForm.value.password,\n        });\n\n        if (response.status === 201) {\n          Swal.fire({\n            title: \"Đăng ký thành công!\",\n            text: \"Vui lòng nhập mã OTP được gửi qua email để xác thực.\",\n            icon: \"success\",\n          });\n          // Hiển thị trường OTP sau khi đăng ký thành công\n          showOTPField.value = true;\n        }\n      } catch (error) {\n        handleError(error);\n      }\n    } else {\n      alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu khớp nhau\");\n    }\n  } else {\n    // Bước 2: Xác thực OTP\n    try {\n      const response = await axios.post(\n        \"http://localhost:3000/user/verifyOTPAndActivateUser\",\n        {\n          EMAIL: registerForm.value.email,\n          OTP: otp.value,\n        }\n      );\n\n      if (response.status === 200) {\n        Swal.fire({\n          title: \"Xác thực thành công!\",\n          text: \"Tài khoản của bạn đã được kích hoạt.\",\n          icon: \"success\",\n        }).then(() => {\n          router.push(\"/login\");\n        });\n      }\n    } catch (error) {\n      Swal.fire({\n        title: \"Lỗi\",\n        text: \"Mã OTP không đúng. Vui lòng thử lại.\",\n        icon: \"error\",\n      });\n    }\n  }\n};\n\nconst togglePasswordVisibility = () => {\n  isPasswordVisible.value = !isPasswordVisible.value;\n};\n\nconst toggleConfirmPasswordVisibility = () => {\n  isConfirmPasswordVisible.value = !isConfirmPasswordVisible.value;\n};\n\nconst handleFacebookLogin = () => {\n  console.log(\"Login with Facebook\");\n};\n\nconst handleGoogleLogin = () => {\n  console.log(\"Login with Google\");\n};\n\nconst handleError = (error) => {\n  if (error.response && error.response.data.errors) {\n    const errors = error.response.data.errors;\n    alert(\"Lỗi đăng ký: \" + (errors.USERNAME || errors.EMAIL || errors.general || \"Vui lòng thử lại sau\"));\n  } else {\n    alert(\"Lỗi không xác định, vui lòng thử lại sau.\");\n  }\n};\n\n</script>\n\n<style scoped>\n.register-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.register-title {\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: #ee4d2d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  position: relative;\n  width: 48%;\n}\n\n.form-group.full-width {\n  width: 100%;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 14px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 16px;\n}\n\n.toggle-password {\n  position: absolute;\n  top: 50%;\n  right: 12px;\n  transform: translateY(-50%);\n  cursor: pointer;\n}\n\n.btn-submit {\n  width: 100%;\n  padding: 14px;\n  background: #ee4d2d;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 18px;\n  transition: background 0.3s;\n}\n\n.btn-submit:hover {\n  background: #ff6347;\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 12px;\n  color: #888;\n  margin: 20px 0;\n}\n\n.divider::before,\n.divider::after {\n  content: \"\";\n  flex: 1;\n  height: 1px;\n  background: #ddd;\n  margin: 0 10px;\n}\n\n.social-login {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\n.btn-social {\n  width: 48%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  color: #333;\n  transition: all 0.3s ease;\n}\n\n.social-icon {\n  margin-right: 10px;\n  width: 24px;\n  height: 24px;\n}\n\n.btn-facebook {\n  color: #3b5998;\n  border-color: #3b5998;\n}\n\n.btn-google {\n  color: #db4437;\n  border-color: #db4437;\n}\n\n.btn-facebook:hover {\n  background-color: #3b5998;\n  color: white;\n}\n\n.btn-google:hover {\n  background-color: #db4437;\n  color: white;\n}\n\n.form-footer {\n  margin-top: 25px;\n  text-align: center;\n}\n\n.form-footer p {\n  font-size: 14px;\n}\n\n@media (max-width: 600px) {\n  .register-container {\n    max-width: 100%;\n    margin: 20px;\n    padding: 20px;\n  }\n\n  .form-row {\n    flex-direction: column;\n  }\n\n  .form-group,\n  .form-group.full-width {\n    width: 100%;\n    margin-bottom: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}