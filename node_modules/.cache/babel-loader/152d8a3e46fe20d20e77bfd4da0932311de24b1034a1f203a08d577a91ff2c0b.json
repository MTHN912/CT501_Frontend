{"ast":null,"code":"export default {\n  name: \"DishList\",\n  data() {\n    return {\n      selectedCategory: \"Tất cả\",\n      showCategories: true,\n      categories: [],\n      dishes: [],\n      cart: {\n        items: []\n      } // Dữ liệu giỏ hàng\n    };\n  },\n  computed: {\n    filteredDishes() {\n      if (this.selectedCategory === \"Tất cả\") {\n        return this.dishes;\n      }\n      return this.dishes.filter(dish => dish.category === this.selectedCategory);\n    },\n    cartTotalQuantity() {\n      return this.cart.items.reduce((total, item) => total + item.quantity, 0);\n    }\n  },\n  methods: {\n    filterByCategory(category) {\n      this.selectedCategory = category;\n    },\n    goToDetail(id) {\n      this.$router.push({\n        name: \"DishDetail\",\n        params: {\n          id: id\n        }\n      });\n    },\n    toggleCategory() {\n      this.showCategories = !this.showCategories;\n    },\n    async selectDish(dish) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/cart/add\", {\n          dishId: dish.id,\n          quantity: dish.quantity\n        });\n        this.cart = response.data.cart;\n        alert(`Đã thêm ${dish.quantity} món ${dish.name} vào giỏ hàng`);\n      } catch (error) {\n        console.error(\"Error adding dish to cart:\", error);\n      }\n    },\n    async fetchCart() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/cart/get\");\n        this.cart = response.data.cart;\n      } catch (error) {\n        console.error(\"Error fetching cart:\", error);\n      }\n    },\n    goToCart() {\n      this.$router.push({\n        name: \"CartDetail\"\n      });\n    }\n  },\n  mounted() {\n    this.fetchCategories();\n    this.fetchDishes();\n    this.fetchCart();\n  }\n};","map":{"version":3,"names":["name","data","selectedCategory","showCategories","categories","dishes","cart","items","computed","filteredDishes","filter","dish","category","cartTotalQuantity","reduce","total","item","quantity","methods","filterByCategory","goToDetail","id","$router","push","params","toggleCategory","selectDish","response","axios","post","dishId","alert","error","console","fetchCart","get","goToCart","mounted","fetchCategories","fetchDishes"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\DishList.vue"],"sourcesContent":["<template>\n  <div class=\"menu-container\">\n    <!-- Danh mục món ăn -->\n    <aside class=\"category-list\">\n      <h3 @click=\"toggleCategory\">\n        Danh mục<span v-if=\"!showCategories\">▼</span><span v-else>▲</span>\n      </h3>\n      <ul v-show=\"showCategories\">\n        <li\n          @click=\"filterByCategory('Tất cả')\"\n          :class=\"{ active: selectedCategory === 'Tất cả' }\"\n        >\n          Tất cả\n        </li>\n        <li\n          v-for=\"category in categories\"\n          :key=\"category\"\n          @click=\"filterByCategory(category)\"\n          :class=\"{ active: selectedCategory === category }\"\n        >\n          {{ category }}\n        </li>\n      </ul>\n    </aside>\n\n    <!-- Danh sách món ăn -->\n    <div class=\"dish-list\">\n      <h2 class=\"title\">Danh sách món ăn</h2>\n      <ul class=\"dish-grid\">\n        <li v-for=\"dish in filteredDishes\" :key=\"dish.id\" class=\"dish-item\">\n          <div class=\"dish-info\">\n            <img\n              :src=\"dish.image\"\n              alt=\"dish image\"\n              class=\"dish-image\"\n              @click=\"goToDetail(dish.id)\"\n            />\n            <div class=\"dish-details\">\n              <h3 @click=\"goToDetail(dish.id)\">{{ dish.name }}</h3>\n              <p>{{ dish.description }}</p>\n              <p>{{ dish.detailedDescription }}</p>\n              <span>Giá: {{ dish.price }} đ</span>\n\n              <!-- Nút yêu thích và đánh giá -->\n              <div class=\"dish-controls\">\n                <div class=\"dish-rating\">\n                  <span\n                    v-for=\"n in 5\"\n                    :key=\"n\"\n                    class=\"star\"\n                    :class=\"{ filled: n <= dish.rating }\"\n                    >★</span\n                  >\n                  <span>({{ dish.rating }})</span>\n                </div>\n                <button @click=\"toggleFavorite(dish)\" class=\"favorite-button\">\n                  <i\n                    :class=\"dish.favorite ? 'fas fa-heart' : 'far fa-heart'\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </div>\n\n              <!-- Số lượng và nút chọn món -->\n              <div class=\"quantity-input\">\n                <label for=\"quantity\">Số lượng:</label>\n                <input\n                  type=\"number\"\n                  id=\"quantity\"\n                  v-model=\"dish.quantity\"\n                  min=\"1\"\n                  class=\"quantity-field\"\n                />\n              </div>\n              <button @click=\"selectDish(dish)\" class=\"select-button\">\n                Chọn món\n              </button>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n\n    <!-- Thông tin giỏ hàng tóm tắt -->\n    <div class=\"cart-summary\" v-if=\"cart.items.length > 0\">\n      <p>Bạn đã chọn {{ cartTotalQuantity }} món</p>\n      <button @click=\"goToCart\">Xem Thực Đơn</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DishList\",\n  data() {\n    return {\n      selectedCategory: \"Tất cả\",\n      showCategories: true,\n      categories: [],\n      dishes: [],\n      cart: { items: [] }, // Dữ liệu giỏ hàng\n    };\n  },\n  computed: {\n    filteredDishes() {\n      if (this.selectedCategory === \"Tất cả\") {\n        return this.dishes;\n      }\n      return this.dishes.filter(\n        (dish) => dish.category === this.selectedCategory\n      );\n    },\n    cartTotalQuantity() {\n      return this.cart.items.reduce((total, item) => total + item.quantity, 0);\n    },\n  },\n  methods: {\n    filterByCategory(category) {\n      this.selectedCategory = category;\n    },\n    goToDetail(id) {\n      this.$router.push({ name: \"DishDetail\", params: { id: id } });\n    },\n    toggleCategory() {\n      this.showCategories = !this.showCategories;\n    },\n\n    async selectDish(dish) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/cart/add\", {\n          dishId: dish.id,\n          quantity: dish.quantity,\n        });\n        this.cart = response.data.cart;\n        alert(`Đã thêm ${dish.quantity} món ${dish.name} vào giỏ hàng`);\n      } catch (error) {\n        console.error(\"Error adding dish to cart:\", error);\n      }\n    },\n\n    async fetchCart() {\n      try {\n        const response = await axios.get(\"http://localhost:3000/cart/get\");\n        this.cart = response.data.cart;\n      } catch (error) {\n        console.error(\"Error fetching cart:\", error);\n      }\n    },\n\n    goToCart() {\n      this.$router.push({ name: \"CartDetail\" });\n    },\n  },\n  mounted() {\n    this.fetchCategories();\n    this.fetchDishes();\n    this.fetchCart();\n  },\n};\n</script>\n\n<style scoped>\n.menu-container {\n  display: flex;\n  padding: 20px;\n  background-color: #f5f5f5;\n}\n\n.category-list {\n  width: 220px;\n  margin-right: 25px;\n}\n\n.category-list h3 {\n  cursor: pointer;\n  background-color: #f8f8f8;\n  padding: 10px;\n  text-align: center;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\n.category-list h3:hover {\n  background-color: #e0e0e0;\n}\n\n.category-list ul {\n  list-style: none;\n  padding: 0;\n  margin-top: 10px;\n}\n\n.category-list li {\n  cursor: pointer;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  text-align: center;\n  transition: background-color 0.3s;\n}\n\n.category-list li.active {\n  background-color: #f5f5f5;\n  font-weight: bold;\n}\n\n.category-list li:hover {\n  background-color: #e0e0e0;\n}\n\n.dish-list {\n  flex: 1;\n}\n\n.title {\n  font-size: 2rem;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.dish-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 35px;\n}\n\n.dish-item {\n  border: 1px solid #ddd;\n  border-radius: 15px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s, box-shadow 0.3s;\n  background-color: #fff; /* Nền màu trắng cho từng món */\n}\n\n.dish-item:hover {\n  transform: scale(1.05); /* Hiệu ứng phóng to khi hover */\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); /* Thêm hiệu ứng bóng đổ khi hover */\n}\n\n.dish-info {\n  text-align: center;\n}\n\n.dish-image {\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  border-radius: 10px;\n}\n\n.dish-details p {\n  margin: 5px 0;\n  color: #666;\n}\n\n.dish-details h3 {\n  font-size: 1.6rem;\n  color: #333;\n  font-weight: bold; /* Đậm hơn */\n}\n\n.dish-details span {\n  font-weight: bold;\n  color: #000;\n  margin-top: 10px;\n  display: block;\n}\n\n.dish-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n}\n\n.dish-rating {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.star {\n  color: #ddd;\n  font-size: 1.2rem;\n  margin-right: 5px;\n}\n\n.star.filled {\n  color: gold;\n}\n\n.favorite-button {\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  color: red;\n  margin-left: 5px;\n  transition: color 0.3s, transform 0.3s;\n}\n\n.favorite-button.active i {\n  color: red; /* Màu khi đã được yêu thích */\n}\n\n.favorite-button:hover i {\n  color: #ff6666; /* Màu khi hover */\n  transform: scale(1.1); /* Hiệu ứng phóng to vừa phải khi hover */\n}\n\n.quantity-input {\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.quantity-field {\n  width: 60px;\n  padding: 5px;\n  margin-left: 10px;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n.select-button {\n  background-color: #ff6600;\n  color: white;\n  padding: 10px 25px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  transition: background-color 0.3s, transform 0.2s;\n  font-size: 1rem;\n}\n\n.select-button:hover {\n  background-color: #ff4500;\n  transform: scale(1.1); /* Phóng to hơn khi hover */\n}\n</style>\n"],"mappings":"AA4FA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,QAAQ;MAC1BC,cAAc,EAAE,IAAI;MACpBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACP,gBAAe,KAAM,QAAQ,EAAE;QACtC,OAAO,IAAI,CAACG,MAAM;MACpB;MACA,OAAO,IAAI,CAACA,MAAM,CAACK,MAAM,CACtBC,IAAI,IAAKA,IAAI,CAACC,QAAO,KAAM,IAAI,CAACV,gBACnC,CAAC;IACH,CAAC;IACDW,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACP,IAAI,CAACC,KAAK,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IAC1E;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACP,QAAQ,EAAE;MACzB,IAAI,CAACV,gBAAe,GAAIU,QAAQ;IAClC,CAAC;IACDQ,UAAUA,CAACC,EAAE,EAAE;MACb,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEvB,IAAI,EAAE,YAAY;QAAEwB,MAAM,EAAE;UAAEH,EAAE,EAAEA;QAAG;MAAE,CAAC,CAAC;IAC/D,CAAC;IACDI,cAAcA,CAAA,EAAG;MACf,IAAI,CAACtB,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IAC5C,CAAC;IAED,MAAMuB,UAAUA,CAACf,IAAI,EAAE;MACrB,IAAI;QACF,MAAMgB,QAAO,GAAI,MAAMC,KAAK,CAACC,IAAI,CAAC,gCAAgC,EAAE;UAClEC,MAAM,EAAEnB,IAAI,CAACU,EAAE;UACfJ,QAAQ,EAAEN,IAAI,CAACM;QACjB,CAAC,CAAC;QACF,IAAI,CAACX,IAAG,GAAIqB,QAAQ,CAAC1B,IAAI,CAACK,IAAI;QAC9ByB,KAAK,CAAC,WAAWpB,IAAI,CAACM,QAAQ,QAAQN,IAAI,CAACX,IAAI,eAAe,CAAC;MACjE,EAAE,OAAOgC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,MAAME,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMC,KAAK,CAACO,GAAG,CAAC,gCAAgC,CAAC;QAClE,IAAI,CAAC7B,IAAG,GAAIqB,QAAQ,CAAC1B,IAAI,CAACK,IAAI;MAChC,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDI,QAAQA,CAAA,EAAG;MACT,IAAI,CAACd,OAAO,CAACC,IAAI,CAAC;QAAEvB,IAAI,EAAE;MAAa,CAAC,CAAC;IAC3C;EACF,CAAC;EACDqC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACL,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}