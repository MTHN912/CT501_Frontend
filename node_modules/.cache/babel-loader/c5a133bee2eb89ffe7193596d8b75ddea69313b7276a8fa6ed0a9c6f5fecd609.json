{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"CartDetail\",\n  data() {\n    return {\n      cart: null,\n      // Ban đầu cart là null, sẽ được gán dữ liệu từ server sau khi tải xong\n      isLoading: true // Trạng thái đang tải dữ liệu\n    };\n  },\n  computed: {\n    totalQuantity() {\n      if (this.cart && this.cart.items) {\n        return this.cart.items.reduce((total, item) => total + item.quantity, 0);\n      }\n      return 0;\n    },\n    totalPrice() {\n      if (this.cart && this.cart.items) {\n        return this.cart.items.reduce((total, item) => total + item.totalPriceForItem, 0);\n      }\n      return 0;\n    }\n  },\n  methods: {\n    // Tăng số lượng: chỉ gửi số lượng +1 đến API addCart\n    async increaseQuantity(item) {\n      try {\n        await axios.post(\"http://localhost:3000/cart/addCart\", {\n          dishId: item.dishId,\n          quantity: 1 // Mỗi lần chỉ tăng 1\n        });\n        await this.fetchCart(); // Sau khi tăng, cập nhật lại giỏ hàng\n      } catch (error) {\n        console.error(\"Lỗi khi tăng số lượng:\", error);\n      }\n    },\n    // Giảm số lượng: gọi API removeCart để giảm 1 món\n    async decreaseQuantity(item) {\n      if (item.quantity > 1) {\n        try {\n          await axios.post(\"http://localhost:3000/cart/removeCart\", {\n            dishId: item.dishId\n          });\n          await this.fetchCart(); // Sau khi giảm, cập nhật lại giỏ hàng\n        } catch (error) {\n          console.error(\"Lỗi khi giảm số lượng:\", error);\n        }\n      }\n    },\n    async removeItem(dishId) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/cart/removeCart\", {\n          dishId: dishId\n        });\n        this.cart = response.data.cart;\n      } catch (error) {\n        console.error(\"Lỗi khi bỏ món:\", error);\n      }\n    },\n    async fetchCart() {\n      try {\n        this.$store.dispatch(\"fetchCart\").then(() => {\n          console.log(\"Giỏ hàng đã được tải thành công\");\n        }).catch(error => {\n          console.error(\"Lỗi khi tải giỏ hàng:\", error);\n        });\n      } finally {\n        this.isLoading = false; // Dừng trạng thái tải sau khi dữ liệu đã lấy về\n      }\n    },\n    checkout() {\n      this.$router.push({\n        name: \"Checkout\"\n      });\n    }\n  },\n  mounted() {\n    this.fetchCart();\n  }\n};","map":{"version":3,"names":["axios","name","data","cart","isLoading","computed","totalQuantity","items","reduce","total","item","quantity","totalPrice","totalPriceForItem","methods","increaseQuantity","post","dishId","fetchCart","error","console","decreaseQuantity","removeItem","response","$store","dispatch","then","log","catch","checkout","$router","push","mounted"],"sources":["D:\\Tiểu Luận Tốt Nghiệp\\Frontend\\src\\components\\Menu\\Cart.vue"],"sourcesContent":["<template>\n  <div class=\"cart-container\">\n    <h2 class=\"title\">Thực Đơn của Bạn</h2>\n\n    <!-- Hiển thị thông báo đang tải nếu dữ liệu chưa tải xong -->\n    <div v-if=\"isLoading\" class=\"loading\">\n      <p>Đang tải dữ liệu...</p>\n    </div>\n\n    <!-- Hiển thị giỏ hàng khi dữ liệu đã tải xong -->\n    <div\n      v-if=\"cart && cart.items && cart.items.length > 0\"\n      class=\"cart-details\"\n    >\n      <ul class=\"cart-item-list\">\n        <li v-for=\"(item, index) in cart.items\" :key=\"index\" class=\"cart-item\">\n          <div class=\"cart-item-info\">\n            <!-- Hiển thị thông tin món ăn -->\n            <div class=\"cart-item-text\">\n              <h3>{{ item.dishName }}</h3>\n              <p>\n                Số lượng:\n                <!-- Nút Giảm số lượng -->\n                <button\n                  @click=\"decreaseQuantity(item)\"\n                  :disabled=\"item.quantity === 1\"\n                >\n                  -\n                </button>\n                <strong>{{ item.quantity }}</strong>\n                <!-- Nút Tăng số lượng -->\n                <button @click=\"increaseQuantity(item)\">+</button>\n              </p>\n              <p>\n                Đơn giá: <strong>{{ item.dishPrice }} đ</strong>\n              </p>\n              <p>\n                Tổng giá: <strong>{{ item.totalPriceForItem }} đ</strong>\n              </p>\n            </div>\n            <img :src=\"item.dishImage\" alt=\"dish image\" class=\"dish-image\" />\n            <button @click=\"removeItem(item.dishId)\" class=\"remove-button\">\n              Bỏ món\n            </button>\n          </div>\n        </li>\n      </ul>\n\n      <div class=\"cart-summary\">\n        <h3>Tổng cộng</h3>\n        <p>\n          Tổng số món: <strong>{{ totalQuantity }}</strong>\n        </p>\n        <p>\n          Tổng giá tất cả: <strong>{{ totalPrice }} đ</strong>\n        </p>\n        <button @click=\"checkout\" class=\"checkout-button\">Đặt Bàn</button>\n      </div>\n    </div>\n\n    <div v-else>\n      <p>Thực đơn của bạn đang trống.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"CartDetail\",\n  data() {\n    return {\n      cart: null, // Ban đầu cart là null, sẽ được gán dữ liệu từ server sau khi tải xong\n      isLoading: true, // Trạng thái đang tải dữ liệu\n    };\n  },\n  computed: {\n    totalQuantity() {\n      if (this.cart && this.cart.items) {\n        return this.cart.items.reduce(\n          (total, item) => total + item.quantity,\n          0\n        );\n      }\n      return 0;\n    },\n    totalPrice() {\n      if (this.cart && this.cart.items) {\n        return this.cart.items.reduce(\n          (total, item) => total + item.totalPriceForItem,\n          0\n        );\n      }\n      return 0;\n    },\n  },\n  methods: {\n    // Tăng số lượng: chỉ gửi số lượng +1 đến API addCart\n    async increaseQuantity(item) {\n      try {\n        await axios.post(\"http://localhost:3000/cart/addCart\", {\n          dishId: item.dishId,\n          quantity: 1, // Mỗi lần chỉ tăng 1\n        });\n        await this.fetchCart(); // Sau khi tăng, cập nhật lại giỏ hàng\n      } catch (error) {\n        console.error(\"Lỗi khi tăng số lượng:\", error);\n      }\n    },\n\n    // Giảm số lượng: gọi API removeCart để giảm 1 món\n    async decreaseQuantity(item) {\n      if (item.quantity > 1) {\n        try {\n          await axios.post(\"http://localhost:3000/cart/removeCart\", {\n            dishId: item.dishId,\n          });\n          await this.fetchCart(); // Sau khi giảm, cập nhật lại giỏ hàng\n        } catch (error) {\n          console.error(\"Lỗi khi giảm số lượng:\", error);\n        }\n      }\n    },\n\n    async removeItem(dishId) {\n      try {\n        const response = await axios.post(\n          \"http://localhost:3000/cart/removeCart\",\n          { dishId: dishId }\n        );\n        this.cart = response.data.cart;\n      } catch (error) {\n        console.error(\"Lỗi khi bỏ món:\", error);\n      }\n    },\n\n    async fetchCart() {\n      try {\n        this.$store\n        .dispatch(\"fetchCart\")\n        .then(() => {\n          console.log(\"Giỏ hàng đã được tải thành công\");\n        })\n        .catch((error) => {\n          console.error(\"Lỗi khi tải giỏ hàng:\", error);\n        });\n      } finally {\n        this.isLoading = false; // Dừng trạng thái tải sau khi dữ liệu đã lấy về\n      }\n    },\n\n    checkout() {\n      this.$router.push({ name: \"Checkout\" });\n    },\n  },\n\n  mounted() {\n    this.fetchCart();\n  },\n};\n</script>\n\n<style scoped>\n.cart-container {\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  font-size: 28px;\n  font-weight: bold;\n  color: #333;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.loading {\n  text-align: center;\n  font-size: 18px;\n  color: #777;\n}\n\n.cart-item-list {\n  list-style: none;\n  padding: 0;\n}\n\n.cart-item {\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #ddd;\n  padding: 15px 0;\n  transition: background-color 0.3s ease;\n}\n\n.cart-item:hover {\n  background-color: #f1f1f1;\n}\n\n.cart-item-info {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.cart-item-text button {\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  margin: 0 5px;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 16px;\n}\n\n.cart-item-text button:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n\n.cart-item-text button:hover:enabled {\n  background-color: #0056b3;\n}\n\n.dish-image {\n  width: 300px;\n  height: 200px;\n  object-fit: cover;\n  margin-left: 40px;\n  margin-right: 20px; /* Khoảng cách giữa hình ảnh và nút bỏ món */\n  border-radius: 10px; /* Bo góc hình ảnh */\n  object-fit: cover; /* Đảm bảo hình ảnh không bị biến dạng */\n}\n\n.remove-button {\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.remove-button:hover {\n  background-color: #c82333;\n}\n\n.cart-summary {\n  margin-top: 20px;\n  padding-top: 10px;\n  border-top: 2px solid #ddd;\n  text-align: right;\n}\n\n.cart-summary h3 {\n  margin-bottom: 10px;\n  font-size: 24px;\n}\n\n.checkout-button {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  cursor: pointer;\n  font-size: 18px;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #218838;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}